"use strict";let date1,date2,place1,place2,long1,long2,lat1,lat2,rotate1=0,rotate2=0,tz1=0,tz2=0,tipsEnabled,tips,highPrecCalInTips,starsLoc=[],brightestStarsLoc=[],conLabelLoc=[];starsLoc[0]=brightStars(),starsLoc[1]=brightStars(),brightestStarsLoc[0]=brightestStars(),brightestStarsLoc[1]=brightestStars(),conLabelLoc[0]=constellationLabel(),conLabelLoc[1]=constellationLabel();let magLimit=5.3,magLimitTip=5.3,milkyPolyLoc=[];function init(){$("#wrapper").show();init_cont()}function init_cont(){let t,e=new Date,a=$("#long1").text(),i=$("#lat1").text();""!=a&&""!=i?(place1=$("#place1").text(),long1=parseFloat(a),lat1=parseFloat(i)):(place1="Champaign, IL, USA",long1=-88.2434,lat1=40.1164);let n=e.getTimezoneOffset(),r=e.toTimeString(),o=r.indexOf("GMT");if(-1!=o)t=r.slice(o+3);else{let e=-n/60;e.toString().length>6&&(e=e.toFixed(2)),t=e>=0?"+"+e:e}tz1={tz:n,tzString:t},place2="",long2=long1,lat2=-30,lat1<0&&(lat2=30),tz2={tz:tz1.tz,tzString:tz1.tzString};let s=e.getFullYear(),l=e.getMonth()+1,d=e.getDate(),c=e.getHours(),p=e.getMinutes(),h=e.getSeconds()+.001*e.getMilliseconds(),m=getDm(s,l,d,tz1.tz)+(c+p/60+h/3600)/24;const u=new URLSearchParams(window.location.search);m=initial_settings_from_url(u,m,1);let g=m/36525,v=DeltaT(g),b=CalDat(m-tz1.tz/1440);date1={yyyy:b.yy,mm:b.mm,dd:b.dd,h:b.h,m:b.m,s:b.s,tz:tz1.tz,tzString:tz1.tzString,dateString:b.dateString,timeString:b.timeString,D:m,T:g,dT:v};let y=getGMST(date1),S=getSidereal(y,long1);date1.LST=S.hour,date1.LST_rad=S.rad,date1.LSTstring=S.string,m=initial_settings_from_url(u,m,2),g=m/36525,v=DeltaT(g),b=CalDat(m-tz2.tz/1440),date2={yyyy:b.yy,mm:b.mm,dd:b.dd,h:b.h,m:b.m,s:b.s,tz:tz2.tz,tzString:tz2.tzString,dateString:b.dateString,timeString:b.timeString,D:m,T:g,dT:v},y=getGMST(date2),S=getSidereal(y,long2),date2.LST=S.hour,date2.LST_rad=S.rad,date2.LSTstring=S.string,tipsEnabled=!0,tips=[[],[]],highPrecCalInTips=!0,$("#loc1").on("click",(function(t){displayPopup(t,1)})),$("#loc2").on("click",(function(t){displayPopup(t,2)})),$("#rotate1").val(Math.floor(180*rotate1/Math.PI+.5)),$("#rotate2").val(Math.floor(180*rotate2/Math.PI+.5)),$("#changeLoc1Manual").prop("checked",!0),$("#changeLoc2Manual").prop("checked",!0);let f={divId:"changeLoc1Form1",loc:1};setupChangeLocCityMenu(f),f={divId:"changeLoc2Form1",loc:2},setupChangeLocCityMenu(f),starChart()}function initial_settings_from_url(p,D,loc){set_location_from_url1(p,loc),set_location_from_url2(p,loc);let rotKey="rotate"+loc;if(p.has(rotKey)){let rotate=parseInt(p.get(rotKey),10);isNaN(rotate)||(rotate-=360*Math.floor(rotate/360),rotate*=Math.PI/180,eval("rotate"+loc+" = rotate"))}let butts=["showPlanets","showEquator","showEcliptic","showGalactic","showMilkyWay","showConLines","showConLab","showDayNight"];butts.forEach((function(t){if(p.has(t+loc)){"0"!=p.get(t+loc)!=$("#"+t+loc).hasClass("active")&&$("#"+t+loc).toggleClass("active")}}));let Dnew=D;if(p.has("jd"+loc)){let t=parseFloat(p.get("jd"+loc));!isNaN(t)&&t>=-71328942.5&&t<=74769559.5&&(Dnew=t-2451545)}return Dnew}function set_location_from_url1(p,loc){if(p.has("long"+loc)&&p.has("lat"+loc)){let lng=parseFloat(p.get("long"+loc)),lat=parseFloat(p.get("lat"+loc));!isNaN(lng)&&!isNaN(lat)&&lng>=-180&&lng<=180&&lat>=-90&&lat<=90&&(eval("long"+loc+" = lng"),eval("lat"+loc+" = lat"),eval("place"+loc+' = ""'))}if(p.has("tz"+loc)){let tz=parseFloat(p.get("tz"+loc));tz.toString().length>6&&(tz=tz.toFixed(2)),!isNaN(tz)&&tz>=-12&&tz<=12&&eval("tz"+loc+' = {tz:-tz*60, tzString:(tz >= 0 ? "+"+tz:tz.toString())}')}}function set_location_from_url2(p,loc){let regKey="region"+loc,iKey="ind"+loc,reg,ind,valid=!1;if(p.has(regKey)&&p.has(iKey)){reg=p.get(regKey),ind=parseInt(p.get(iKey),10);let t=["NAm","LA","EA","SEA","SA","WCA","EE","NE","WE","SE","AF","OC"];valid=t.map((t=>t==reg)).reduce(((t,e)=>t||e)),(isNaN(ind)||ind<0)&&(valid=!1)}if(valid){let cities=eval(reg+"_cities()");if(ind>=cities.length)return;let city=cities[ind];eval("place"+loc+' = city[0]+", "+city[1]'),eval("lat"+loc+" = city[2]"),eval("long"+loc+" = city[3]");let setTz="setTz"+loc;if(p.has(setTz)){let tz=parseFloat(p.get(setTz));if(!isNaN(tz)&&tz>=-12&&tz<=12){tz.toString().length>6&&(tz=tz.toFixed(2));let tzString=tz>=0?"+"+tz:tz.toString();tz*=-60,eval("tz"+loc+" = {tz:tz, tzString:tzString}")}}}}function displayChangeLocs(){$("button.menu").attr("disabled",!0),$("#inputlocs").slideDown(),$("#geolocmessage").empty(),$("#geolocerr").empty(),$("#place1in").val(place1),$("#long1in").val(long1),$("#lat1in").val(lat1),$("#year1in").val(date1.yyyy),$("#month1in").val(date1.mm),$("#day1in").val(date1.dd),$("#hour1in").val(date1.h),$("#minute1in").val(date1.m),$("#second1in").val(date1.s.toFixed(3)),$("#tz1in").val(-tz1.tz/60),$("#place2in").val(place2),$("#long2in").val(long2),$("#lat2in").val(lat2),$("#year2in").val(date2.yyyy),$("#month2in").val(date2.mm),$("#day2in").val(date2.dd),$("#hour2in").val(date2.h),$("#minute2in").val(date2.m),$("#second2in").val(date2.s.toFixed(3)),$("#tz2in").val(-tz2.tz/60),$("#synTimeYes").prop("checked",!0),$("#synTimeNo").prop("checked",!1),$(".timeInputLoc2").hide()}function geoloc(){$("#geolocmessage").append("Please wait..."),"geolocation"in navigator?navigator.geolocation.getCurrentPosition((function(t){var e=t.coords.longitude,a=t.coords.latitude;$("#place1in").val(""),$("#long1in").val(e),$("#lat1in").val(a),$("#geolocmessage").empty();$("#geolocmessage").append("Success! Longitude and latitude have been entered.")}),(function(t){ipLookUp()})):ipLookUp()}function ipLookUp(){$.ajax({url:"http://ip-api.com/json",success:function(t){var e=t.city;""!=t.region&&(e+=", "+t.region),e+=", "+t.countryCode,$("#place1in").text(e),$("#long1in").text(t.lon),$("#lat1in").text(t.lat),$("#geolocmessage").empty();$("#geolocmessage").append("Success! Longitude and latitude have been entered.")},timeout:1e3,error:function(t,e,a){$("#geolocmessage").empty();$("#geolocerr").append("Unable to determine your location by GPS or IP address!")}})}function changeSyncTime(t,e){var a="#"+e+"Yes",i="#"+e+"No";0==t?($(a).prop("checked",!1),$(i).prop("checked",!0),$(".timeInputLoc2").show()):($(a).prop("checked",!0),$(i).prop("checked",!1),$(".timeInputLoc2").hide())}function switchChangeLocForm(t,e){$("#changeLoc"+t+"Form"+e).show(),$("#changeLoc"+t+"Form"+(1-e)).hide()}function setupChangeLocCityMenu(t){let e=t.divId,a='<p style="color:blue;">1. Select a region:</p>',i="region"+e,n=[{code:"NAm",name:"North America"},{code:"LA",name:"Latin America"},{code:"EA",name:"East Asia"},{code:"SEA",name:"South-East Asia"},{code:"SA",name:"South Asia"},{code:"WCA",name:"West and Central Asia"},{code:"EE",name:"Eastern Europe"},{code:"NE",name:"Northern Europe"},{code:"WE",name:"Western Europe"},{code:"SE",name:"Southern Europe"},{code:"AF",name:"Africa"},{code:"OC",name:"Oceania"}];a+='<table class="selectRegion">',n.forEach((function(t,n){n%4==0&&(a+="<tr>"),a+='<td><input type="radio" id="'+i+t.code+'" name="'+i+'" value="'+t.code+'" onclick="addCity(\''+e+"','"+t.code+"')\" ",0==n&&(a+="checked "),a+="/>",a+='<label for="'+i+t.code+'">'+t.name+"</label></td>",n%4==3&&(a+="</tr>")})),n.length%4!=0&&(a+='<td colspan="'+(4-n.length)+'"></td></tr>'),a+="</table><br />",a+='<p style="color:blue;">2. Select a city from the dropdown menu: <span id="'+e+'selectCitySpan"></span></p>',a+='<p><span style="color:blue;">3. Choose a time zone:</span><br />',a+='<input type="radio" id="'+e+'tzComputer" name="'+e+'timezone" />';let r=-(new Date).getTimezoneOffset()/60;r.toString().length>6&&(r=r.toFixed(2)),a+='<label for="'+e+"tzComputer\">Set by computer's clock"+(" ("+(r>=0?"GMT+":"GMT")+r+")")+"</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",a+='<input type="radio" id="'+e+'tzCustom" name="'+e+'timezone" checked />',a+='<label for="'+e+'tzCustom">Custom: GMT+</label>',a+='<input id="'+e+'tzCustomInput" type="number" step="0.01" min="-12" max="12" /></p>',$("#"+e).html(a),addCity(e,n[0].code)}function addCity(divId,regionCode){let city=eval(regionCode+"_cities()"),n=city.length,txt='<select name="'+divId+'selectCity" id="'+divId+'selectCity" onchange="setDefaultCustomTimeZone(\''+divId+"','"+regionCode+"')\">";txt+='<option disabled selected value="-1"> -- select a city -- </option>';let country="";for(let t=0;t<n;t++){city[t][1]!=country&&(txt+='<option disabled value="-1" style="color:brown;">'+city[t][1].toUpperCase()+"</option>",country=city[t][1]);let e=city[t][0]+", "+city[t][1];txt+='<option value="'+t+'">'+e+"</option>"}txt+="</select>",$("#"+divId+"selectCitySpan").html(txt)}function setDefaultCustomTimeZone(divId,regionCode){let ind=parseInt($("#"+divId+"selectCity").val(),10);if(-1!=ind){let tz=parseFloat(eval(regionCode+"_cities()["+ind+"][5]"));$("#"+divId+"tzCustomInput").val(tz)}}function changeLocationsAndTimes(){let errid="#errorlocs";function validate_manual_input(t){let e=$("#place"+t+"in").val(),a="#long"+t+"in",i=parseFloat($(a).val()),n=-180,r=180,o="Invalid longitude! Longitude must be a number between -180 and 180. West of Greenwich is negative; east of Greenwich is positive.";sanityCheck(i,a,n,r,o,errid),a="#lat"+t+"in";let s=parseFloat($(a).val());n=-90,r=90,o="Invalid latitude! Latitude must be a number between -90 and 90, positive in the northern hemisphere and negative in the southern hemisphere.",sanityCheck(s,a,n,r,o,errid),a="#tz"+t+"in";let l=parseFloat($(a).val());if(n=-12,r=12,o="Invalid time zone! Time zone must be a number between -12 and 12.",sanityCheck(l,a,n,r,o,errid),""==$(errid).text()){l.toString().length>6&&(l=l.toFixed(2));let a=l>=0?"+"+l:l.toString();l*=-60,1==t?(place1=e,long1=i,lat1=s,tz1.tz=l,tz1.tzString=a):(place2=e,long2=i,lat2=s,tz2.tz=l,tz2.tzString=a)}}function validate_menu_input(loc){let divId="changeLoc"+loc+"Form1",ind=parseInt($("#"+divId+"selectCity").val(),10);if(isNaN(ind)||-1==ind)$(errid).append('<p style="color:red;">Please select a city from the dropdown menu for location '+loc+".</p>");else{let prefix="region"+divId,regionCode=["NAm","LA","EA","SEA","SA","WCA","EE","NE","WE","SE","AF","OC"],reg,n=regionCode.length;for(let t=0;t<n;t++)if($("#"+prefix+regionCode[t]).prop("checked")){reg=regionCode[t];break}let city=eval(reg+"_cities()["+ind+"]");if(eval("place"+loc+' = city[0]+", "+city[1]'),eval("lat"+loc+" = city[2]"),eval("long"+loc+" = city[3]"),$("#"+divId+"tzCustom").prop("checked")){let t="#"+divId+"tzCustomInput",e=parseFloat($(t).val()),a=-12,i=12,n="Invalid time zone for location "+loc+"! Please enter a number between -12 and 12.";if(sanityCheck(e,t,a,i,n,errid),""==$(errid).text()){e.toString().length>6&&(e=e.toFixed(2));let t=e>=0?"+"+e:e.toString();e*=-60,1==loc?(tz1.tz=e,tz1.tzString=t):(tz2.tz=e,tz2.tzString=t)}}else{let t=new Date,e=t.toTimeString(),a=e.indexOf("GMT");-1!=a&&(e=e.slice(a+3)),1==loc?(tz1.tz=t.getTimezoneOffset(),tz1.tzString=e):(tz2.tz=t.getTimezoneOffset(),tz2.tzString=e)}}}function validate_time_input(loc){let id="#year"+loc+"in",year=parseInt($(id).val(),10),min=parseInt($(id).attr("min"),10),max=parseInt($(id).attr("max"),10),message="Invalid year! Please enter an integer between "+min+" and "+max+".";sanityCheck(year,id,min,max,message,errid),id="#month"+loc+"in";let month=parseInt($(id).val(),10);min=1,max=12,message="Invalid month! Please enter an integer between "+min+" and "+max+".",sanityCheck(month,id,min,max,message,errid),id="#day"+loc+"in";let day=parseInt($(id).val(),10);min=1,max=31,message="Invalid day! Please enter an integer between "+min+" and "+max+".",sanityCheck(day,id,min,max,message,errid),id="#hour"+loc+"in";let hh=parseInt($(id).val(),10);min=0,max=23,message="Invalid hour! Please enter an integer between "+min+" and "+max+".",sanityCheck(hh,id,min,max,message,errid),id="#minute"+loc+"in";let mm=parseInt($(id).val(),10);min=0,max=59,message="Invalid minute! Please enter an integer between "+min+" and "+max+".",sanityCheck(mm,id,min,max,message,errid),id="#second"+loc+"in";let s=parseFloat($(id).val());if(min=0,max=60,message="Invalid second! Please enter a number between "+min+" and "+max+".",sanityCheck(s,id,min,max,message,errid),""==$(errid).text()){let D=getDm(year,month,day,0),date=CalDat(D),dateString=date.dateString,timeString=generateTimeString(hh,mm,s),tz,tzString;1==loc?(tz=tz1.tz,tzString=tz1.tzString):(tz=tz2.tz,tzString=tz2.tzString),D=getDm(date.yy,date.mm,date.dd,tz)+(hh+mm/60+s/3600)/24;let T=D/36525,dT=DeltaT(T);eval("date"+loc+"= {yyyy:date.yy, mm:date.mm, dd:date.dd, h:hh, m:mm, s:s, tz:tz, tzString:tzString, dateString:dateString, timeString:timeString, D:D, T:T, dT:dT}");let GMST=eval("getGMST(date"+loc+")"),LST=eval("getSidereal(GMST,long"+loc+")");eval("date"+loc+".LST = LST.hour"),eval("date"+loc+".LST_rad = LST.rad"),eval("date"+loc+".LSTstring = LST.string")}}if($(errid).empty(),$("#changeLoc1Manual").prop("checked")?validate_manual_input(1):validate_menu_input(1),validate_time_input(1),$("#changeLoc2Manual").prop("checked")?validate_manual_input(2):validate_menu_input(2),""==$(errid).text())if($("#synTimeYes").prop("checked")){let t=CalDat(date1.D-tz2.tz/1440);date2={yyyy:t.yy,mm:t.mm,dd:t.dd,h:t.h,m:t.m,s:t.s,tz:tz2.tz,tzString:tz2.tzString,dateString:t.dateString,timeString:t.timeString,D:date1.D,T:date1.T,dT:date1.dT};let e=getGMST(date2),a=getSidereal(e,long2);date2.LST=a.hour,date2.LST_rad=a.rad,date2.LSTstring=a.string}else validate_time_input(2);""==$(errid).text()&&($("#inputlocs").slideUp(),$("button.menu").attr("disabled",!1),starChart())}function slideUpLoadUrl(t,e){$("#"+t).slideUp(),$("button.menu").attr("disabled",!1),location.href=e}function showHide(t,e){var a=t.toString();$("#show"+e+a).toggleClass("active"),starChartLoc(t)}function rotInput(t){var e=t.toString(),a="#rotate"+e,i="#errRotate"+e;$(i).empty();var n=parseInt($(a).val());if($(a).css("background-color","transparent"),isNaN(n)){$(a).css("background-color","#e2a8a8");$(i).append('<p style="color:red;">Invalid input! Please enter an integer.</p>')}""==$(i).text()&&(n-=360*Math.floor(n/360),$(a).val(n),1==t?rotate1=n*Math.PI/180:rotate2=n*Math.PI/180,starChartLoc(t))}function getGMST(t){var e=Math.floor(t.D-.5)+.5,a=t.h+t.m/60+t.s/3600+t.tz/60;a-=24*Math.floor(a/24);var i=.06570748587250752*e;i-=24*Math.floor(i/24),i+=6.697374558336001+1.0027378119113546*a,i-=24*Math.floor(i/24);var n=t.T+t.dT;return i+=2.686296296296296e-7+n*(.08541030618518518+2577003148148148e-20*n),i-=24*Math.floor(i/24)}function getSidereal(t,e){var a=t+e/15,i=(a-=24*Math.floor(a/24))*Math.PI/12,n=a+.5/3600,r=Math.floor(n).toString(),o=Math.floor(60*(n-r)).toString(),s=Math.floor(3600*(n-r-o/60)).toString();return r.length<2&&(r="0"+r),o.length<2&&(o="0"+o),s.length<2&&(s="0"+s),{hour:a,rad:i,string:r+":"+o+":"+s}}function starChart(){var t=date1.dateString+"&nbsp;&nbsp;"+date1.timeString+"  GMT"+tz1.tzString,e=date2.dateString+"&nbsp;&nbsp;"+date2.timeString+" GMT"+tz2.tzString;$("#place1").text(place1),$("#long1").html(long1+"&deg;"),$("#lat1").html(lat1+"&deg;"),$("#time1").html(t),$("#siderealTime1").text(date1.LSTstring),$("#place2").text(place2),$("#long2").html(long2+"&deg;"),$("#lat2").html(lat2+"&deg;"),$("#time2").html(e),$("#siderealTime2").text(date2.LSTstring);var a=setupDrawingParameters();starChartLoc(1),starChartLoc(2),addLegend(a)}function starChartLoc(t){var e,a,i;1==t?(e=date1,a=lat1):(e=date2,a=lat2);var n=a*Math.PI/180,r=t.toString(),o=document.getElementById("loc"+r);Math.abs(e.yyyy)>3e3&&""==$("#warning"+r).text()&&$("#warning"+r).append('<p style="color:red;">Warning: Positions of the Sun, Moon and planets are not accurate at this time.</p>'),Math.abs(e.yyyy)<3e3&&""!=$("#warning"+r).text()&&$("#warning"+r).empty();e.T;var s=e.T+e.dT,l=setupDrawingParameters();l.loc=t,l.rotate=rotate1,2==t&&(l.rotate=rotate2),l.cosRotAng=Math.cos(l.rotate),l.sinRotAng=Math.sin(l.rotate);var d={milky:{}};if(l.showPlanets=$("#showPlanets"+r).hasClass("active"),l.showEquator=$("#showEquator"+r).hasClass("active"),l.showEcliptic=$("#showEcliptic"+r).hasClass("active"),l.showGalactic=$("#showGalactic"+r).hasClass("active"),l.showMilkyWay=$("#showMilkyWay"+r).hasClass("active"),l.showConLines=$("#showConLines"+r).hasClass("active"),l.showConLab=$("#showConLab"+r).hasClass("active"),l.showDayNight=$("#showDayNight"+r).hasClass("active"),l.showEcliptic&&(Math.abs(s)<1?l.eclipticNorthPoleDec=1.16170371649804:l.eclipticNorthPoleDec=.5*Math.PI-epsA(s)),l.showMilkyWay&&(d.milky.polyTepoch=milkyPolyLoc[t-1].Tepoch,d.milky.poly=milkyPolyLoc[t-1].poly,d.milky.sb=milkyPolyLoc[t-1].sb,i=d.milky.polyTepoch,Math.abs(s-i)>.1&&(milkyWayBoundaryPrecession(d.milky,i,s),milkyPolyLoc[t-1].Tepoch=s,d.milky.polyTepoch=s)),l.showGalactic){let t=galacticNorthPole(s);l.galPoleRa=t.ra,l.galPoleDec=t.dec}if(d.conLines=constellationLines(),l.showConLab&&(d.conLab=conLabelLoc[t-1],i=d.conLab[0].Tepoch,Math.abs(s-i)>.1)){var c=precession_matrix(i,s-i);addPrecession(d.conLab,c,s);for(var p=1;p<d.conLab.length;p++)if("ra2"in d.conLab[p]){var h=precessed_ra_dec(d.conLab[p].ra2,d.conLab[p].dec2,c);d.conLab[p].ra2=h.ra,d.conLab[p].dec2=h.dec}}d.stars=starsLoc[t-1],i=d.stars[0].Tepoch,Math.abs(s-i)>.1&&recomputeStarPos(s,d.stars),l.showPlanets?d.planets=sunMoonPlanets(s):(d.planets=[],d.planets[0]=MiniSun(s)),drawStarsPlanets(o,d,l,e.LST_rad,n)}function drawStarsPlanets(t,e,a,i,n){let r=t.getContext("2d");r.clearRect(0,0,t.width,t.height);let o=Math.cos(n),s=Math.sin(n),l=.5*Math.PI,d=2*Math.PI,c=.47*Math.max(t.width,t.height),p=.5*t.width,h=.5*t.height,m={ra:e.planets[0].ra,dec:e.planets[0].dec},u=180*ra_dec_to_alt_az(m,i,o,s).alt/Math.PI;r.beginPath(),r.setLineDash([]),r.arc(p,h,c,0,2*Math.PI);let g=255,v=255;a.showDayNight&&(g=Math.round(255*(1+u/18)),g=Math.min(g,255),g=Math.max(0,g),v=Math.round(.95*g)),r.fillStyle="rgb("+v+","+v+","+g+")",r.fill(),r.strokeStyle="black",r.stroke();let b,y,S,f,M,T,$,z={halfPI:l,xc:p,yc:h,r:c,r2:c*c,altSun:u,rotate:a.rotate,cosRotAng:a.cosRotAng,sinRotAng:a.sinRotAng};if(drawAzimuthLabels(r,z),a.showMilkyWay&&drawMilkyWay(r,i,e.milky,o,s,z,a),a.showGalactic&&(b={ra:a.galPoleRa,dec:a.galPoleDec,linestyle:[14,15],color:"magenta"},drawCircle(r,i,o,s,b,z)),a.showEquator){let t="black";g<170&&(t="yellow"),b={ra:0,dec:l,linestyle:[],color:t},drawCircle(r,i,o,s,b,z)}if(a.showEcliptic){let t="brown";g<170&&(t="yellow"),b={ra:-.5*Math.PI,dec:a.eclipticNorthPoleDec,linestyle:[10,15],color:t},drawCircle(r,i,o,s,b,z)}(a.showConLines||tipsEnabled)&&(tipsEnabled&&(y=new Array(e.stars.length),y.fill(!0),tips[a.loc-1].length=0),drawConstellationLinesAndSetupTips(r,e.conLines,e.stars,i,o,s,z,a,y));let x=e.stars.length;for(r.fillStyle=g<170?"white":"black",S=1;S<x;S++)e.stars[S].mag>magLimit||($=ra_dec_to_xy_above(e.stars[S],i,o,s,z),$.x>-998&&(T=a.starMagA*e.stars[S].mag+a.starMagB,T=Math.max(T,1),r.beginPath(),r.arc($.x,$.y,T,0,d),r.fill(),tipsEnabled&&e.stars[S].mag<magLimitTip&&y[S]&&(y[S]=!1,T=Math.max(T,3),tips[a.loc-1].push({x:$.x,y:$.y,r2:T*T,object:"star",starInd:S}))));if(tipsEnabled&&(y.length=0),a.showPlanets)for(r.font="20px Arial",S=0;S<9;S++){if(m={ra:e.planets[S].ra,dec:e.planets[S].dec},1==S){var w=topoCentricEquatorial(e.planets[S].rGeo,m.ra,m.dec,i,s,o);m={ra:w.raTopo,dec:w.decTopo}}if($=ra_dec_to_xy_above(m,i,o,s,z),$.x>-998){f=$.x,M=$.y;let t=String.fromCharCode(a.code[S]);r.fillStyle=a.color[S],r.fillText(t,f+a.offset[S].x,M+a.offset[S].y),r.beginPath(),r.arc(f,M,a.size[S],0,d),r.fill(),tipsEnabled&&(T=.5*r.measureText(t).width,T=Math.max(T,10),tips[a.loc-1].push({x:f+a.offset[S].x+T,y:M+a.offset[S].y-10,r2:T*T,object:a.pName[S],pIndex:S}))}}a.showConLab&&drawConstellationLabel(r,e.conLab,i,o,s,z,a)}function drawAzimuthLabels(t,e){var a=10*Math.PI/180,i=180*e.rotate/Math.PI;t.font="15px Arial",t.txtAlign="center",t.fillStyle="black";for(var n=0;n<36;n++){var r=10*n-i;r-=360*Math.floor(r/360);var o,s,l=n*a-e.rotate,d=Math.cos(l),c=Math.sin(l),p=e.xc-e.r*c,h=e.yc-e.r*d,m=e.xc-1.02*e.r*c,u=e.yc-1.02*e.r*d;r<90||r>270?(o=e.xc-1.03*e.r*c,s=e.yc-1.03*e.r*d):(o=e.xc-1.06*e.r*c,s=e.yc-1.06*e.r*d),t.beginPath(),t.moveTo(p,h),t.lineTo(m,u),t.stroke();var g=10*n,v=g+String.fromCharCode(176);0==g?v="N":90==g?v="E":180==g?v="S":270==g&&(v="W"),t.save(),t.translate(o,s),r<90||r>270?t.rotate(-l):t.rotate(Math.PI-l);var b=t.measureText(v).width;t.fillText(v,.5*-b,0),t.restore()}t.txtAlign="start"}function ra_dec_to_alt_az(t,e,a,i){var n=e-t.ra,r=Math.cos(n),o=Math.sin(n),s=Math.cos(t.dec),l=Math.sin(t.dec),d=l*i+a*s*r;d=Math.asin(d);var c=Math.cos(d),p=s*o/c,h=(s*r*i-l*a)/c;return Math.abs(c)<1e-10&&(p=0,h=1),{alt:d,cosA:h,sinA:p}}function atmosphericRefraction(t,e,a){var i=t+.003137559423803098/(t+.08918632477691024);return.000296705972839036*(2.80198*e/a)/Math.tan(i)}function ra_dec_to_xy_above(t,e,a,i,n){var r=e-t.ra,o=Math.cos(r),s=Math.sin(r),l=Math.cos(t.dec),d=Math.sin(t.dec),c=d*i+a*l*o;c=Math.asin(c);var p,h,m=Math.cos(c),u=l*s/m,g=(l*o*i-d*a)/m,v=u*n.cosRotAng-g*n.sinRotAng,b=g*n.cosRotAng+u*n.sinRotAng;if(Math.abs(m)<1e-10&&(v=0,b=1),c>-.0175&&(c+=atmosphericRefraction(c,101,286)),c>=0){var y=n.r*Math.tan(.5*(n.halfPI-c));p=n.xc+y*v,h=n.yc+y*b}else p=-999,h=-999;return{x:p,y:h}}function ra_dec_to_xy(t,e,a,i,n){var r=e-t.ra,o=Math.cos(r),s=Math.sin(r),l=Math.cos(t.dec),d=Math.sin(t.dec),c=d*i+a*l*o;c=Math.asin(c);var p=Math.cos(c),h=l*s/p,m=(l*o*i-d*a)/p,u=h*n.cosRotAng-m*n.sinRotAng,g=m*n.cosRotAng+h*n.sinRotAng;Math.abs(p)<1e-10&&(u=0,g=1),c>-.0175&&(c+=atmosphericRefraction(c,101,286));var v=n.r*Math.tan(.5*(n.halfPI-c));return{x:n.xc+v*u,y:n.yc+v*g}}function topoCentricEquatorial(t,e,a,i,n,r){var o=t*Math.cos(e)*Math.cos(a),s=t*Math.sin(e)*Math.cos(a),l=t*Math.sin(a),d=.9933056020041341,c=6378.1366/Math.sqrt(r*r+d*n*n),p=d*c,h=o-c*r*Math.cos(i),m=s-c*r*Math.sin(i),u=l-p*n,g=Math.sqrt(h*h+m*m+u*u);return{rTopo:g,raTopo:Math.atan2(m,h),decTopo:Math.asin(u/g)}}function drawCircle(t,e,a,i,n,r){var o,s,l,d,c,p=!0;if(Math.abs(n.dec-r.halfPI)<1e-5)o=-a,s=0,l=i;else{var h,m=e-n.ra,u=Math.sin(m),g=Math.cos(m),v=Math.sin(n.dec),b=Math.cos(n.dec),y=i*v+a*b*g;Math.abs(Math.abs(y)-1)<1e-5?p=!1:(o=(h=Math.sqrt(1-y*y))*(c=(b*g*i-v*a)/h),s=h*(d=b*u/h),l=y)}if(p){var S=Math.sqrt(o*o+s*s),f=-s/S,M=o/S,T=-l*M,$=l*f,z=S,x=Math.PI/25;t.beginPath(),t.setLineDash(n.linestyle),c=f;var w=(d=M)*r.cosRotAng-c*r.sinRotAng,A=c*r.cosRotAng+d*r.sinRotAng,D=r.xc+r.r*w,C=r.yc+r.r*A;t.moveTo(D,C);for(var L=1;L<25;L++){var I=L*x,P=Math.cos(I),R=Math.sin(I),_=P*f+R*T,k=P*M+R*$,F=R*z,E=Math.sqrt(_*_+k*k);if(E<1e-5)t.lineTo(r.xc,r.yc);else{c=_/E,w=(d=k/E)*r.cosRotAng-c*r.sinRotAng,A=c*r.cosRotAng+d*r.sinRotAng;var N=Math.asin(F),G=r.r*Math.tan(.5*(r.halfPI-N));D=r.xc+G*w,C=r.yc+G*A;t.lineTo(D,C)}}c=-f,w=(d=-M)*r.cosRotAng-c*r.sinRotAng,A=c*r.cosRotAng+d*r.sinRotAng,D=r.xc+r.r*w,C=r.yc+r.r*A,t.lineTo(D,C),t.strokeStyle=n.color,t.stroke()}}function milkyWayBoundaryPrecession(t,e,a){let i=precession_matrix(e,a-e),n=t.poly.length;for(let e=0;e<n;e++){let a=t.poly[e].length;for(let n=0;n<a;n++){let a=precessed_ra_dec(t.poly[e][n][0],t.poly[e][n][1],i);t.poly[e][n][0]=a.ra,t.poly[e][n][1]=a.dec}}}function addPrecession(t,e,a){t[0].epoch="",t[0].Tepoch=a;for(let a=1;a<t.length;a++){let i=precessed_ra_dec(t[a].ra,t[a].dec,e);t[a].ra=i.ra,t[a].dec=i.dec}}function drawMilkyWay(t,e,a,i,n,r,o){t.save();let s=o.showDayNight&&r.altSun<-6?"#668cff":"#7FFFD4";t.beginPath(),t.arc(r.xc,r.yc,r.r,0,2*Math.PI),t.clip(),draw_mw_polygon(t,e,a.poly,a.sb,i,n,r,s),t.restore()}function draw_mw_polygon(t,e,a,i,n,r,o,s){t.lineWidth=.2,t.fillStyle=s,t.strokeStyle=s,a.forEach((function(a,s){let l=a.map((function(t){return ra_dec_to_xy({ra:t[0],dec:t[1]},e,n,r,o)})),d=l.map((function(t){let e=t.x-o.xc,a=t.y-o.yc;return e*e+a*a}));if(Math.min.apply(null,d)>=o.r2)return;t.beginPath(),t.moveTo(l[0].x,l[0].y);let c=l.length;for(let e=1;e<c;e++)t.lineTo(l[e].x,l[e].y);t.globalAlpha=.7*i[s],t.stroke(),t.fill()}))}function drawLineAboveHorizon(t,e,a,i,n,r){var o,s,l={ra:a[1].ra,dec:a[1].dec},d=ra_dec_to_xy(l,e,i,n,r);o=d.x,s=d.y;for(var c=2;c<a.length;c++)addLine(t,o,s,o=(d=ra_dec_to_xy(l={ra:a[c].ra,dec:a[c].dec},e,i,n,r)).x,s=d.y,r)}function galacticNorthPole(t){var e=precession_matrix(0,t);return precessed_ra_dec(3.366012906575397,.4734787372451951,e)}function drawConstellationLinesAndSetupTips(t,e,a,i,n,r,o,s,l){var d,c,p,h;for(t.strokeStyle="#1B9722",s.showDayNight&&o.altSun<-6&&(t.strokeStyle="#93ff33"),t.setLineDash([]),c=0;c<e.length;c++)$.each(e[c],(function(e,c){if("name"!=e&&"abbr"!=e){var m,u,g,v,b={ra:a[c[0]].ra,dec:a[c[0]].dec},y=ra_dec_to_xy(b,i,n,r,o);u=y.x,v=y.y,h=(u-o.xc)*(u-o.xc)+(v-o.yc)*(v-o.yc),tipsEnabled&&l[c[0]]&&h<o.r2&&(d=c[0],l[d]=!1,p=s.starMagA*a[d].mag+s.starMagB,p=Math.max(p,3),tips[s.loc-1].push({x:u,y:v,r2:p*p,object:"star",starInd:d}));for(var S=1;S<c.length;S++)m=u,g=v,u=(y=ra_dec_to_xy(b={ra:a[c[S]].ra,dec:a[c[S]].dec},i,n,r,o)).x,v=y.y,s.showConLines&&addLine(t,m,g,u,v,o),h=(u-o.xc)*(u-o.xc)+(v-o.yc)*(v-o.yc),tipsEnabled&&l[c[S]]&&h<o.r2&&(d=c[S],l[d]=!1,p=s.starMagA*a[d].mag+s.starMagB,p=Math.max(p,3),tips[s.loc-1].push({x:u,y:v,r2:p*p,object:"star",starInd:d}))}}))}function drawConstellationLabel(t,e,a,i,n,r,o){t.font=12..toString()+"px Arial";var s=255,l=255;o.showDayNight&&(s=Math.round(255*(1+r.altSun/18)),s=Math.min(s,255),s=Math.max(0,s),l=Math.round(.95*s));var d="orange";s>130&&(d="#6c3483");for(var c="rgb("+l+","+l+","+s+")",p=1;p<e.length;p++){var h={ra:e[p].ra,dec:e[p].dec},m=ra_dec_to_xy_above(h,a,i,n,r);if(m.x>-998){var u=t.measureText(e[p].abbr).width;t.fillStyle=c,t.fillRect(m.x,m.y-12,u,12),t.fillStyle=d,t.fillText(e[p].abbr,m.x,m.y)}"ra2"in e[p]&&(m=ra_dec_to_xy_above(h={ra:e[p].ra2,dec:e[p].dec2},a,i,n,r)).x>-998&&(t.fillStyle=c,t.fillRect(m.x,m.y-12,u,12),t.fillStyle=d,t.fillText(e[p].abbr,m.x,m.y))}}function recomputeStarPos(t,e){var a=e[0].Tepoch,i=t-a;e[0].epoch="",e[0].Tepoch=t;for(var n=precession_matrix(a,i),r=1;r<e.length;r++){var o=e[r].x+e[r].vx*i,s=e[r].y+e[r].vy*i,l=e[r].z+e[r].vz*i,d=Math.sqrt(o*o+s*s+l*l);e[r].dist2000<99e3&&(e[r].mag=e[r].mag2000+5*Math.LOG10E*Math.log(d/e[r].dist2000)),e[r].x=n.p11*o+n.p12*s+n.p13*l,e[r].y=n.p21*o+n.p22*s+n.p23*l,e[r].z=n.p31*o+n.p32*s+n.p33*l;var c=e[r].vx,p=e[r].vy,h=e[r].vz;e[r].vx=n.p11*c+n.p12*p+n.p13*h,e[r].vy=n.p21*c+n.p22*p+n.p23*h,e[r].vz=n.p31*c+n.p32*p+n.p33*h,e[r].ra=Math.atan2(e[r].y,e[r].x),e[r].dec=Math.asin(e[r].z/d)}}function addLine(t,e,a,i,n,r){var o=function(t){return t*t},s=o(e-r.xc)+o(a-r.yc),l=o(i-r.xc)+o(n-r.yc);if(!(s>r.r2&&l>r.r2)){var d=e,c=i,p=a,h=n;if(s>r.r2||l>r.r2){var m,u=(e-r.xc)*(i-r.xc)+(a-r.yc)*(n-r.yc),g=o(e-i)+o(a-n),v=s-u;s<=r.r2?(c=e+(m=(v+Math.sqrt(v*v+g*(r.r2-s)))/g)*(i-e),h=a+m*(n-a)):(d=e+(m=(v-Math.sqrt(v*v+g*(r.r2-s)))/g)*(i-e),p=a+m*(n-a))}t.beginPath(),t.moveTo(d,p),t.lineTo(c,h),t.stroke()}}function addLegend(t){var e,a,i,n,r=document.getElementById("legend"),o=r.getContext("2d");o.clearRect(0,0,r.width,r.height),o.font="20px Arial",o.fillStyle="black",o.fillText("Magnitude scale:",0,20);var s=2*Math.PI;for(e=-1;e<6;e++){a=t.starMagA*e+t.starMagB,i=180+40*(e+1);var l=-20;-1==e&&(l=-22),o.fillText(e.toString(),i+l,20),o.beginPath(),o.arc(i,15,a,0,s),o.fill()}o.fillText("Planet symbols:   Sun",0,50),o.fillText("Moon",270,50),o.fillText("Mercury",380,50),o.fillText("Venus",160,75),o.fillText("Mars",270,75),o.fillText("Jupiter",380,75),o.fillText("Saturn",160,100),o.fillText("Uranus",270,100),o.fillText("Neptune",380,100),o.fillStyle=t.color[0],i=195,n=50,o.fillText(String.fromCharCode(t.code[0]),i,n),o.beginPath(),o.arc(i-t.offset[0].x,n-t.offset[0].y,t.size[0],0,s),o.fill(),o.fillStyle=t.color[1],i=320,o.fillText(String.fromCharCode(t.code[1]),i,n),o.beginPath(),o.arc(i-t.offset[1].x,n-t.offset[1].y,t.size[1],0,s),o.fill(),o.fillStyle=t.color[2],i=455,o.fillText(String.fromCharCode(t.code[2]),i,n),o.beginPath(),o.arc(i-t.offset[2].x,n-t.offset[2].y,t.size[2],0,s),o.fill(),o.fillStyle=t.color[3],i=220,n=75,o.fillText(String.fromCharCode(t.code[3]),i,n),o.beginPath(),o.arc(i-t.offset[3].x,n-t.offset[3].y,t.size[3],0,s),o.fill(),o.fillStyle=t.color[4],i=320,o.fillText(String.fromCharCode(t.code[4]),i,n),o.beginPath(),o.arc(i-t.offset[4].x,n-t.offset[4].y,t.size[4],0,s),o.fill(),o.fillStyle=t.color[5],i=445,o.fillText(String.fromCharCode(t.code[5]),i,n),o.beginPath(),o.arc(i-t.offset[5].x,n-t.offset[5].y,t.size[5],0,s),o.fill(),o.fillStyle=t.color[6],i=225,n=100,o.fillText(String.fromCharCode(t.code[6]),i,n),o.beginPath(),o.arc(i-t.offset[6].x,n-t.offset[6].y,t.size[6],0,s),o.fill(),o.fillStyle=t.color[7],i=335,o.fillText(String.fromCharCode(t.code[7]),i,n),o.beginPath(),o.arc(i-t.offset[7].x,n-t.offset[7].y,t.size[7],0,s),o.fill(),o.fillStyle=t.color[8],i=460,o.fillText(String.fromCharCode(t.code[8]),i,n),o.beginPath(),o.arc(i-t.offset[8].x,n-t.offset[8].y,t.size[8],0,s),o.fill()}function displayPopup(t,e){var a,i,n=document.getElementById("loc"+e).getBoundingClientRect(),r=t.clientX-n.left,o=t.clientY-n.top,s=!1;for(a=0;a<tips[e-1].length;a++){var l=r-(i=tips[e-1][a]).x,d=o-i.y;if(l*l+d*d<i.r2){s=!0;break}}if(s){var c,p,h="#tip"+e;$(h+"text").empty(),1==e?(c=date1,long1,p=lat1*Math.PI/180):(c=date2,long2,p=lat2*Math.PI/180);var m=c.h+c.m/60+c.s/3600,u=c.LST_rad-1.0027378119113546*m*Math.PI/12;u-=2*Math.PI*Math.floor(.5*u/Math.PI);var g={loc:e,lat:p,LST:c.LST_rad,LST0:u,T:c.T,dT:c.dT,hours:m},v=c.T+c.dT;v>-50&&v<10&&(g.nu=nutation(v),g.LAST=g.LST+g.nu.Ee),"star"==i.object?displayPopupStar(i,g):"Sun"==i.object?displayPopupSun(i,g):"Moon"==i.object?displayPopupMoon(i,g):displayPopupPlanet(i,g),$(h).css("left",i.x+3+"px"),$(h).css("top",i.y+3+"px"),$(h).show()}}function closePopup(t){var e="#"+t;$(e).hide(),$(e+"text").empty(),$(e).css("left","-200px")}function displayPopupSun(t,e){var a,i=[!1,!1,!0,!1,!1,!1,!1,!1],n=e.T+e.dT;a=highPrecCalInTips?planetGeoVSOP(n,"Sun",!1):planetPos(n,i)[2];var r,o,s=180/Math.PI,l=12/Math.PI,d=convertDM(a.ra2000*l,"hm"),c=convertDM(a.dec2000*s,"dm"),p=Math.cos(e.lat),h=Math.sin(e.lat),m=e.LST;"nu"in e?(m=e.LAST,r=precessed_ra_dec(a.ra,a.dec,e.nu),a.ra=r.ra,a.dec=r.dec,o=topoCentricEquatorial(149597870.7*a.rGeo,a.ra,a.dec,m,h,p)):o=topoCentricEquatorial(149597870.7*a.rGeo,a.ra,a.dec,m,h,p);var u={ra:o.raTopo,dec:o.decTopo};if("nu"in e){var g={T:n,m:e.nu,LAST:e.LAST,cosLat:p,sinLat:h};u=aberration(o.raTopo,o.decTopo,g)}var v=convertDM(u.ra*l,"hm"),b=convertDM(u.dec*s,"dm"),y=precession_matrix(n,-n);if("nu"in e){var S={p11:e.nu.p11,p12:e.nu.p21,p13:e.nu.p31,p21:e.nu.p12,p22:e.nu.p22,p23:e.nu.p32,p31:e.nu.p13,p32:e.nu.p23,p33:e.nu.p33};r=precessed_ra_dec(o.raTopo,o.decTopo,S),r=precessed_ra_dec(r.ra,r.dec,y)}else r=precessed_ra_dec(o.raTopo,o.decTopo,y);var f=constellationAbbrNames()[get_constellation(r.ra,r.dec)],M=convertDM(r.ra*l,"hm"),T=convertDM(r.dec*s,"dm"),z=31.965/a.rGeo,x=ra_dec_to_alt_az(r={ra:u.ra,dec:u.dec},m,p,h),w=(x.alt+atmosphericRefraction(x.alt,101,286))*s,A=Math.atan2(x.sinA,x.cosA)*s+180;w=w.toFixed(2)+"&deg;",A=A.toFixed(2)+"&deg;";for(var D=n-e.hours/876600,C=[],L=[],I=0;I<25;I++)a=planetPos(D+I/876600,i)[2],C[I]=a.ra,L[I]=a.dec;var P=getTransitTime(e.LST0,e.lat,C,L,!1),R=P.t+" ("+P.alt+")",_=-.01454441043328608,k=getRiseSet(_,e.LST0,e.lat,C,L),F=k.rise+" ("+k.azRise+"), "+k.set;"above"==k.rise&&(F="circumpolar");var E=(k=getRiseSet(_=-.1047197551196598,e.LST0,e.lat,C,L)).rise+", "+k.set;"above"==k.rise&&(E="above -6&deg;");var N=(k=getRiseSet(_=-.2094395102393196,e.LST0,e.lat,C,L)).rise+", "+k.set;"above"==k.rise&&(N="above -12&deg;");var G=(k=getRiseSet(_=-.3141592653589793,e.LST0,e.lat,C,L)).rise+", "+k.set;"above"==k.rise&&(G="above -18&deg;");var U="<table>";U+='<tr><th colspan="2">Sun</th></tr>',U+="<tr><td>Distance</td> <td>"+a.rGeo.toFixed(3)+" AU</td></tr>",U+="<tr><td>Angular Diameter</td> <td>"+z.toFixed(1)+"'</td></tr>",U+="<tr><td>Geocentric Ra, Dec (J2000)</td> <td>"+d+", "+c+"</td></tr>",U+="<tr><td>Topocentric Ra, Dec (J2000)</td> <td>"+M+", "+T+"</td></tr>","nu"in e?(U+="<tr><td>App. Topo. Ra, Dec (of date)</td> <td>"+v+", "+b+"</td></tr>",U+="<tr><td>Apparent Sidereal Time</td> <td>"+convertDM(12*e.LAST/Math.PI,"hm")+"</td></tr>"):U+="<tr><td>Topocentric Ra, Dec (of date)</td> <td>"+v+", "+b+"</td></tr>",U+="<tr><td>Constellation</td><td>"+f+"</td></tr>",U+="<tr><td>Altitude, Azimuth</td> <td>"+w+", "+A+"</td></tr>",U+="<tr><td>Rise (Azi), Set</td> <td>"+F+"</td></tr>",U+="<tr><td>Upper Transit (Altitude)</td> <td>"+R+"</td></tr>",U+="<tr><td>Civ. Twi. beg., end</td> <td>"+E+"</td></tr>",U+="<tr><td>Nat. Twi. beg., end</td> <td>"+N+"</td></tr>",U+="<tr><td>Ast. Twi. beg., end</td> <td>"+G+"</td></tr>";var j="#tip"+e.loc+"text";$(j).append(U)}function displayPopupMoon(t,e){var a,i,n,r,o,s,l=e.T+e.dT;if(highPrecCalInTips){n=(a=MoonPosElpMpp02(l,!0)).rGeo;s=(i=planetPos(l,[!1,!1,!0,!1,!1,!1,!1,!1])[2]).rGeo,o=i.lam2000,r=a.lam2000}else a=MediumMoon(l),s=1,o=(i=MiniSun(l)).lam,r=a.lam,n=a.rGeo;var d,c,p=180/Math.PI,h=12/Math.PI,m=Math.cos(e.lat),u=Math.sin(e.lat),g=convertDM(a.ra2000*h,"hm"),v=convertDM(a.dec2000*p,"dm"),b=e.LST;"nu"in e?(b=e.LAST,d=precessed_ra_dec(a.ra,a.dec,e.nu),a.ra=d.ra,a.dec=d.dec,c=topoCentricEquatorial(a.rGeo,a.ra,a.dec,b,u,m)):c=topoCentricEquatorial(a.rGeo,a.ra,a.dec,e.LST,u,m);var y={ra:c.raTopo,dec:c.decTopo};if("nu"in e){var S=15514103102587391e-22*m/Math.sqrt(m*m+.9933056020041341*u*u),f=-S*Math.sin(e.LAST),M=S*Math.cos(e.LAST),T=Math.cos(y.ra)*Math.cos(y.dec)+f,z=Math.sin(y.ra)*Math.cos(y.dec)+M,x=Math.sin(y.dec),w=Math.sqrt(T*T+z*z+x*x);y.ra=Math.atan2(z,T),y.dec=Math.asin(x/w)}var A=convertDM(y.ra*h,"hm"),D=convertDM(y.dec*p,"dm"),C=c.rTopo,L=precession_matrix(l,-l);if("nu"in e){var I={p11:e.nu.p11,p12:e.nu.p21,p13:e.nu.p31,p21:e.nu.p12,p22:e.nu.p22,p23:e.nu.p32,p31:e.nu.p13,p32:e.nu.p23,p33:e.nu.p33};d=precessed_ra_dec(c.raTopo,c.decTopo,I),d=precessed_ra_dec(d.ra,d.dec,L)}else d=precessed_ra_dec(c.raTopo,c.decTopo,L);var P=constellationAbbrNames()[get_constellation(d.ra,d.dec)],R=convertDM(d.ra*h,"hm"),_=convertDM(d.dec*p,"dm"),k=ra_dec_to_alt_az(d={ra:y.ra,dec:y.dec},b,m,u),F=(k.alt+atmosphericRefraction(k.alt,101,286))*p,E=Math.atan2(k.sinA,k.cosA)*p+180;F=F.toFixed(2)+"&deg;",E=E.toFixed(2)+"&deg;";for(var N=moonIlluminated(i.ra,i.dec,c.raTopo,c.decTopo,o,r,C,s),G=N.illuminated.toFixed(2),U=N.phase,j=N.elongTxt,q=N.mag.toFixed(1),H=l-e.hours/876600,O=[],W=[],B=0;B<25;B++)a=MediumMoon(H+B/876600),O[B]=a.ra,W[B]=a.dec;var Y=getTransitTime(e.LST0,e.lat,O,W,!0),J=Y.t+" ("+Y.alt+")",V=getRiseSet(.002327105669325773,e.LST0,e.lat,O,W),K=V.rise+" ("+V.azRise+")",Z=V.set+" ("+V.azSet+")";"above"==V.rise&&(K="circumpolar",Z="circumpolar");var Q="<table>";Q+='<tr><th colspan="2">Moon</th></tr>',Q+="<tr><td>Geocentric Distance</td><td>"+n.toFixed(0)+" km ("+(n/6371).toFixed(1)+"R<sub>&oplus;</sub>)</td></tr>",Q+="<tr><td>Topocentric Distance</td><td>"+C.toFixed(0)+" km ("+(C/6371).toFixed(1)+"R<sub>&oplus;</sub>)</td></tr>",Q+="<tr><td>Angular Diameter</td> <td>"+(3475/C*10800/Math.PI).toFixed(1)+"'</td></tr>",Q+="<tr><td>Phase</td> <td>"+U+"</td></tr>",Q+="<tr><td>Illuminated</td> <td>"+G+"</td> </tr>",Q+="<tr><td>Apparent Magnitude</td> <td>"+q+"</td> </tr>",Q+="<tr><td>Solar Elongation</td> <td>"+j+"</td> </tr>",Q+="<tr><td>Geocentric Ra, Dec (J2000)</td> <td>"+g+", "+v+"</td></tr>",Q+="<tr><td>Topocentric Ra, Dec (J2000)</td> <td>"+R+", "+_+"</td></tr>","nu"in e?(Q+="<tr><td>App. Topo. Ra, Dec (of date)</td> <td>"+A+", "+D+"</td></tr>",Q+="<tr><td>Apparent Sidereal Time</td> <td>"+convertDM(12*e.LAST/Math.PI,"hm")+"</td></tr>"):Q+="<tr><td>Topocentric Ra, Dec (of date)</td> <td>"+A+", "+D+"</td></tr>",Q+="<tr><td>Constellation</td><td>"+P+"</td></tr>",Q+="<tr><td>Altitude, Azimuth</td> <td>"+F+", "+E+"</td></tr>",Q+="<tr><td>Rise (Azimuth)</td> <td>"+K+"</td></tr>",Q+="<tr><td>Upper Transit (Altitude)</td> <td>"+J+"</td></tr>",Q+="<tr><td>Set (Azimuth)</td> <td>"+Z+"</td></tr>";var X="#tip"+e.loc+"text";$(X).append(Q)}function displayPopupPlanet(t,e){var a=[!1,!1,!0,!1,!1,!1,!1,!1],i=t.pIndex-1;t.pIndex<4&&i--,a[i]=!0;var n,r,o=e.T+e.dT;if(highPrecCalInTips)r={rGeo:(n=planetGeoVSOP(o,t.object,!0)).dSunEarth,lam2000:n.lamSun2000,bet2000:n.betSun2000};else{var s=planetPos(o,a);n=s[i],r=s[2]}var l,d,c=n.rHelio,p=n.rGeo,h=180/Math.PI,m=12/Math.PI,u=convertDM(n.ra2000*m,"hm"),g=convertDM(n.dec2000*h,"dm"),v=Math.cos(e.lat),b=Math.sin(e.lat),y=e.LST;"nu"in e?(y=e.LAST,l=precessed_ra_dec(n.ra,n.dec,e.nu),n.ra=l.ra,n.dec=l.dec,d=topoCentricEquatorial(149597870.7*p,n.ra,n.dec,y,b,v)):d=topoCentricEquatorial(149597870.7*p,n.ra,n.dec,y,b,v);var S={ra:d.raTopo,dec:d.decTopo};if("nu"in e){var f={T:o,m:e.nu,LAST:e.LAST,cosLat:v,sinLat:b};S=aberration(d.raTopo,d.decTopo,f)}var M=convertDM(S.ra*m,"hm"),T=convertDM(S.dec*h,"dm"),z=precession_matrix(o,-o);if("nu"in e){var x={p11:e.nu.p11,p12:e.nu.p21,p13:e.nu.p31,p21:e.nu.p12,p22:e.nu.p22,p23:e.nu.p32,p31:e.nu.p13,p32:e.nu.p23,p33:e.nu.p33};l=precessed_ra_dec(d.raTopo,d.decTopo,x),l=precessed_ra_dec(l.ra,l.dec,z)}else l=precessed_ra_dec(d.raTopo,d.decTopo,z);var w=constellationAbbrNames()[get_constellation(l.ra,l.dec)],A=convertDM(l.ra*m,"hm"),D=convertDM(l.dec*h,"dm"),C=elongationPhase(n,r),L=C.elongation,I=C.illuminated,P={object:t.object,i:C.phaseAng,rHelio:c,rGeo:p,T:o,planet:n,sun:r},R=planetMag(P),_={Mercury:6.726865375887558,Venus:16.68838398040351,Mars:9.3468517633725,Jupiter:192.78588394427936,Saturn:160.5799887548923,Uranus:69.93800100978119,Neptune:67.89738430970871}[t.object]/p,k=ra_dec_to_alt_az(l={ra:S.ra,dec:S.dec},y,v,b),F=(k.alt+atmosphericRefraction(k.alt,101,286))*h,E=Math.atan2(k.sinA,k.cosA)*h+180;F=F.toFixed(2)+"&deg;",E=E.toFixed(2)+"&deg;";var N=[],G=[],U=o-e.hours/876600;a[2]=!1;for(var j=0;j<25;j++)n=planetPos(U+j/876600,a)[i],N[j]=n.ra,G[j]=n.dec;var q=getTransitTime(e.LST0,e.lat,N,G,!1),H=q.t+" ("+q.alt+")",O=getRiseSet(-.009890199094634533,e.LST0,e.lat,N,G),W=O.rise+" ("+O.azRise+"), "+O.set;"above"==O.rise&&(W="circumpolar");var B="#tip"+e.loc+"text",Y="<table>";Y+='<tr><th colspan="2">'+t.object+"</th></tr>",Y+="<tr><td>Heliocentric Distance</td> <td>"+c.toFixed(3)+" AU</td></tr>",Y+="<tr><td>Geocentric Distance</td> <td>"+p.toFixed(3)+" AU</td></tr>",Y+="<tr><td>Angular Diameter</td> <td>"+_.toPrecision(3)+'"</td></tr>',Y+="<tr> <td>Elongation</td> <td>"+L+"</td></tr>",t.pIndex<5&&(Y+="<tr><td>Illuminated</td> <td>"+I+"</td></tr>"),Y+="<tr><td>Apparent Magnitude</td> <td>"+R.toFixed(1)+"</td></tr>",Y+="<tr><td>Geocentric Ra, Dec (J2000)</td> <td>"+u+", "+g+"</td></tr>",Y+="<tr><td>Topocentric Ra, Dec (J2000)</td> <td>"+A+", "+D+"</td></tr>","nu"in e?(Y+="<tr><td>App. Topo. Ra, Dec (of date)</td> <td>"+M+", "+T+"</td></tr>",Y+="<tr><td>Apparent Sidereal Time</td> <td>"+convertDM(12*e.LAST/Math.PI,"hm")+"</td></tr>"):Y+="<tr><td>Topocentric Ra, Dec (of date)</td> <td>"+M+", "+T+"</td></tr>",Y+="<tr><td>Constellation</td><td>"+w+"</td></tr>",Y+="<tr><td>Altitude, Azimuth</td> <td>"+F+", "+E+"</td></tr>",Y+="<tr><td>Rise (Azi), Set</td> <td>"+W+"</td></tr>",Y+="<tr><td>Upper Transit (Altitude)</td> <td>"+H+"</td></tr>",$(B).append(Y)}function displayPopupStar(t,e){var a=brightStars(),i=a[t.starInd],n=e.T+e.dT,r=a[0].Tepoch,o=n-r,s=i.x+i.vx*o,l=i.y+i.vy*o,d=i.z+i.vz*o,c=Math.sqrt(s*s+l*l+d*d);if(n>-50&&n<10){var p=planetPos(n,[!1,!1,!0,!1,!1,!1,!1,!1])[2],h=p.rGeo*Math.PI/648e3;s-=-h*Math.cos(p.ra2000)*Math.cos(p.dec2000),l-=-h*Math.sin(p.ra2000)*Math.cos(p.dec2000),d-=-h*Math.sin(p.dec2000),c=Math.sqrt(s*s+l*l+d*d)}var m=180/Math.PI,u=12/Math.PI,g=Math.atan2(l,s),v=Math.asin(d/c),b=convertDM(g*u,"hm"),y=convertDM(v*m,"dm"),S=constellationAbbrNames(),f=S[get_constellation(g,v)],M=S[i.con];f!=M&&(f=M+" (2000), "+f+" (",f+=(1==e.loc?date1.yyyy:date2.yyyy)+")");var T=precession_matrix(r,o),z=e.LST;"nu"in e&&(z=e.LAST,T={p11:e.nu.p11*T.p11+e.nu.p12*T.p21+e.nu.p13*T.p31,p12:e.nu.p11*T.p12+e.nu.p12*T.p22+e.nu.p13*T.p32,p13:e.nu.p11*T.p13+e.nu.p12*T.p23+e.nu.p13*T.p33,p21:e.nu.p21*T.p11+e.nu.p22*T.p21+e.nu.p23*T.p31,p22:e.nu.p21*T.p12+e.nu.p22*T.p22+e.nu.p23*T.p32,p23:e.nu.p21*T.p13+e.nu.p22*T.p23+e.nu.p23*T.p33,p31:e.nu.p31*T.p11+e.nu.p32*T.p21+e.nu.p33*T.p31,p32:e.nu.p31*T.p12+e.nu.p32*T.p22+e.nu.p33*T.p32,p33:e.nu.p31*T.p13+e.nu.p32*T.p23+e.nu.p33*T.p33});var x=T.p11*s+T.p12*l+T.p13*d,w=T.p21*s+T.p22*l+T.p23*d,A=T.p31*s+T.p32*l+T.p33*d,D=Math.atan2(w,x),C=Math.asin(A/c);if("nu"in e){var L={T:n,m:e.nu,LAST:e.LAST,cosLat:Math.cos(e.lat),sinLat:Math.sin(e.lat)};D=(O=aberration(D,C,L)).ra,C=O.dec}var I,P=convertDM(D*u,"hm"),R=convertDM(C*m,"dm"),_="<table>",k=i.name,F=3.2616*c,E="";I=i.dist2000>=99e3?"?":c.toPrecision(4)+" pc ("+F.toPrecision(4)+" ly)","bayer"in i&&"<"!=k.slice(0,1)&&(k+=", "+i.bayer+" "+i.con);var N=i.mag.toFixed(2),G="Mag.",U=0;if(i.dist2000<99e3){var j=i.mag+5-5*Math.LOG10E*Math.log(i.dist2000);U=5*Math.LOG10E*Math.log(c/i.dist2000),G+=", Abs. Mag.",N=(N=i.mag+U).toFixed(2)+", "+j.toFixed(2)}if("varMax"in i&&"varMin"in i){var q=parseFloat(i.varMax)+U,H=parseFloat(i.varMin)+U;E=q.toFixed(2)+" &ndash; "+H.toFixed(2)}_+='<tr><th colspan="2">'+k+"</th></tr>",_+="<tr><td>"+G+"</td> <td>"+N+"</td></tr>",""!=E&&(_+="<tr><td>Variable</td> <td>"+E+"</td></tr>"),_+="<tr><td>Distance</td> <td>"+I+"</td></tr>","spect"in i&&(_+="<tr><td>Spec, col. ind.</td> <td>"+i.spect,"colorInd"in i&&(_+=", "+i.colorInd),_+="</td></tr>"),_+="<tr><td>Constellation</td> <td>"+f+"</td></tr>",_+="<tr><td>Ra, Dec (J2000)</td> <td>"+b+", "+y+"</td></tr>","nu"in e?(_+="<tr><td>App. Ra, Dec (of date)</td> <td>"+P+", "+R+"</td></tr>",_+="<tr><td>Apparent Sidereal Time</td> <td>"+convertDM(12*e.LAST/Math.PI,"hm")+"</td></tr>"):_+="<tr><td>Ra, Dec (of date)</td> <td>"+P+", "+R+"</td></tr>";var O={ra:D,dec:C},W=ra_dec_to_alt_az(O,z,Math.cos(e.lat),Math.sin(e.lat)),B=(W.alt+atmosphericRefraction(W.alt,101,286))*m,Y=Math.atan2(W.sinA,W.cosA)*m+180;_+="<tr><td>Alt, Azimuth</td> <td>"+B.toFixed(2)+"&deg;, "+Y.toFixed(2)+"&deg;</td></tr>",B=-.009890199094634533;var J=riseSetStar(e.LST0,B,e.lat,D,C);_+="<tr><td>Upper Transit (Alt)</td> <td>"+(J.transit+" ("+J.altTransit+")")+"</td></tr>";var V=J.rise+" ("+J.azRise+"), "+J.set;"above"==J.rise&&(V="circumpolar"),_+="<tr><td>Rise (Azi), Set</td> <td>"+V+"</td></tr>",_+="</table>";var K="#tip"+e.loc+"text";$(K).append(_)}function setupDrawingParameters(){var t=-4/6.5;return{color:["red","orange","maroon","#FF00FF","red","brown","brown","#7277e6","#7277e6"],code:[9788,9789,9791,9792,9794,9795,9796,9954,9798],size:[1,2,1,2,2,2,2,2,2],offset:[{x:-10,y:7},{x:-10,y:7},{x:-5,y:7},{x:-7,y:0},{x:-7,y:2},{x:-10,y:7},{x:-5,y:7},{x:-10,y:3},{x:-8,y:5}],pName:["Sun","Moon","Mercury","Venus","Mars","Jupiter","Saturn","Uranus","Neptune"],starMagA:t,starMagB:4.076923076923077}}milkyPolyLoc[0]={Tepoch:0,poly:mw_poly(),sb:mw_sb()},milkyPolyLoc[1]={Tepoch:0,poly:mw_poly(),sb:mw_sb()};var animateDtStep=2,frameRate=40,animate_id;function Animate(t){var e="#animate"+t;"Play Animation"==$(e).text()?($(e).text("Stop Animation"),$("button.menu").attr("disabled",!0),$("button.setupAnimate").attr("disabled",!0),$("button.controlAnimate").attr("disabled",!0),$(e).attr("disabled",!1),tipsEnabled=!1,tips[0].length=0,tips[1].length=0,$(".animationStop").empty(),clearInterval(animate_id),animate_id=setInterval((function(){playAnimation(t,1)}),frameRate)):(clearInterval(animate_id),$(e).text("Play Animation"),$("button.menu").attr("disabled",!1),$("button.setupAnimate").attr("disabled",!1),$("button.controlAnimate").attr("disabled",!1),tipsEnabled=!0,starChart())}function playAnimation(t,e){var a,i,n;1==t?(a=date1,i="GMT"+tz1.tzString,n=long1):(a=date2,i="GMT"+tz2.tzString,n=long2),a.D+=e*animateDtStep/1440,a.T=a.D/36525,a.dT=DeltaT(a.T);var r=CalDat(a.D-a.tz/1440);a.yyyy=r.yy,a.mm=r.mm,a.dd=r.dd,a.dateString=r.dateString;var o=e*animateDtStep/60;o-=24*Math.floor(o/24);var s=a.h+a.m/60+a.s/3600+o;s-=24*Math.floor(s/24),a.h=Math.floor(s),a.m=Math.floor(60*(s-a.h)),a.s=3600*(s-a.h-a.m/60),a.timeString=generateTimeString(a.h,a.m,a.s);var l=getSidereal(getGMST(a),n);a.LST=l.hour,a.LST_rad=l.rad,a.LSTstring=l.string;var d=a.dateString+"&nbsp;&nbsp;"+a.timeString+"  "+i;if(Math.abs(a.yyyy)>2e5)return clearInterval(animate_id),$("#animate"+t).text("Play Animation"),$("button.menu").attr("disabled",!1),$("button.setupAnimate").attr("disabled",!1),$("button.controlAnimate").attr("disabled",!1),$("#warning"+t).append('<p style="color:red;" class="animationStop">Animation stops since the formula used for precession is only valid between the years -200,000 and 200,000.</p>'),tipsEnabled=!0,void starChart();$("#time"+t).html(d),$("#siderealTime"+t).text(l.string),starChartLoc(t)}function displayAnimationSetup(t){$("button.menu").attr("disabled",!0),$("button.setupAnimate").attr("disabled",!0),$("button.controlAnimate").attr("disabled",!0);var e="#animationSetup"+t;$(e).empty(),$(e).slideDown();var a,i,n,r,o,s="<h2>Animation Setup</h2>";$(e).append(s),s='<form name="animSetup" action="" method="get">',s+="<table>",s+='<tr><td colspan="3"><b>Location '+t+"</b></td></tr>",s+='<tr><td>Name: <input type="text" id="placeAnim"></td>',s+='<td>Longitude: <input type="number" id="longAnim" step="any" min=-180 max=180 /></td> <td>Latitude: <input type="number" id="latAnim" step="any" min=-90 max=90 /></td></tr>',s+='<tr><td colspan="3"><b>Start Time</b></td></tr>',s+='<tr><td>Year: <input type="number" id="yearAnim" step="1" min=-200000 max=200000 /></td>',s+='<td>Month: <input type="number" id="monthAnim" step="1" min=1 max=12 /></td>',s+='<td>Day: <input type="number" id="dayAnim" step="1" min=1 max=31 /></td></tr>',s+='<tr><td>Hour: <input type="number" id="hourAnim" step="1" min=0 max=23 /></td>',s+='<td>Minute: <input type="number" id="minuteAnim" step="1" min=0 max=59 /></td>',s+='<td>Second: <input type="number" id="secondAnim" step="any" min=0 max=60 /></td></tr>',s+='<tr><td>Time zone: GMT+<input type="number" id="tzAnim" step="any" min=-12 max=14 /></td>',s+="<td></td><td></td> </tr>",s+='<tr><td colspan="3">Choose time step/frame: <input type="radio" id="radioCustom" value="custom" onclick="animRadioClick(',s+="'custom')",s+='" />Custom &nbsp;&nbsp;&nbsp;<input type="radio" id="radioSiderealDay" value="sidereal" onclick="animRadioClick(',s+="'sidereal')",s+='" />1 sidereal day&nbsp;&nbsp;&nbsp;<input type="radio" id="radioDay" value="day" onclick="animRadioClick(',s+="'day')",s+='" />1 day&nbsp;&nbsp;&nbsp;<input type="radio" id="radioCentury" value="century" onclick="animRadioClick(',s+="'century')",s+='" />36525 days (100 years)<br />',s+='<input type="number" id="timeStepAnim" step="any" min=-52596000 max=52596000 /> minutes</td></tr>',s+='<tr><td colspan="3">Time between 2 frames: <input type="number" id="frameRateAnim" step="1" min=1 max=1000 /> ms</td></tr>',s+="</table><br />",s+='<p><input type="button" value="Submit" onclick="animationSetup(this.form,'+t+')" /></p>',s+="</form>",$(e).append(s),s='<div id="animationErrorlocs"></div>',$(e).append(s),s="<p>Note:",s+="<ul>",s+="<li>Time step/frame is the time between two successive frames in the animation.</li>",s+="<li>Time between two frames determines how frequently the star chart will be updated during the animation. It can be as fast as 1 ms, but the chart may not be fast enough to be drawn in 1 ms, depending on the processor speed.</li>",s+="<li>If you choose time step/frame to be one sidereal day, the sidereal time will be fixed in all frames and stars will be fixed in the star chart during the animation. You will see the Sun, Moon and planets move with respect to the stars.</li>",s+="<li>If you choose time step/frame to be one day, the local time will be fixed in the animation and you will see the daily shift of constellations with respect to the horizon. In the day time, you will see the Sun trace out a figure-eight pattern over the year, known as the analemma.</li>",s+="<li>The positions of the Sun, Moon and planets are only accurate for years between -3000 and 3000.</li>",s+="<li>If you choose time step/frame to be 36525 days (1 Julian century), the time soon goes beyond the range in which the positions of the Sun, Moon and planets are accurate. It is better to turn off displaying the Sun, Moon, planets and day/night background before playing the animation. Note also that the constellation lines will be distorted as stars move away from their current positions as a result of proper motions. In addition to stars' motions in space, the positions of the stars in the chart also change as a result of precession and Earth's spin. To visualize the effects of stars' motions and precession separately over millennia, it is better to view the animation in <a href='chartGCRS.html' target='_blank'>equatorial star charts</a>.</li>",s+="<li>The animation will stop when year goes beyond 200,000 since the formula for the precession become inaccurate after that time.",s+="</ul></p>",$(e).append(s),1==t?(a=date1,i=place1,n=long1,r=lat1,o=tz1):(a=date2,i=place2,n=long2,r=lat2,o=tz2),$("#placeAnim").val(i),$("#longAnim").val(n),$("#latAnim").val(r),$("#yearAnim").val(a.yyyy),$("#monthAnim").val(a.mm),$("#dayAnim").val(a.dd),$("#hourAnim").val(a.h),$("#minuteAnim").val(a.m),$("#secondAnim").val(a.s.toFixed(3)),$("#tzAnim").val(-o.tz/60),$("#timeStepAnim").val(animateDtStep),$("#frameRateAnim").val(frameRate),$("#radioCustom").prop("checked",!1),$("#radioSiderealDay").prop("checked",!1),$("#radioDay").prop("checked",!1),1440==animateDtStep?($("#radioDay").prop("checked",!0),$("#timeStepAnim").prop("disabled",!0)):Math.abs(animateDtStep-1436.06817551502)<.0016?($("#radioSiderealDay").prop("checked",!0),$("#timeStepAnim").val(1436.06817551502),$("#timeStepAnim").prop("disabled",!0)):52596e3==animateDtStep?($("#radioCentury").prop("checked",!0),$("#timeStepAnim").prop("disabled",!0)):($("#radioCustom").prop("checked",!0),$("#timeStepAnim").prop("disabled",!1))}function animRadioClick(t){switch($("#radioCustom").prop("checked",!1),$("#radioSiderealDay").prop("checked",!1),$("#radioDay").prop("checked",!1),$("#radioCentury").prop("checked",!1),t){case"custom":$("#radioCustom").prop("checked",!0),$("#timeStepAnim").prop("disabled",!1);break;case"sidereal":$("#radioSiderealDay").prop("checked",!0),$("#timeStepAnim").val(1436.06817551502),$("#timeStepAnim").prop("disabled",!0);break;case"day":$("#radioDay").prop("checked",!0),$("#timeStepAnim").val(1440),$("#timeStepAnim").prop("disabled",!0);break;case"century":$("#radioCentury").prop("checked",!0),$("#timeStepAnim").val(52596e3),$("#timeStepAnim").prop("disabled",!0)}}function animationSetup(t,e){var a=t.placeAnim.value,i=parseFloat(t.longAnim.value),n=parseFloat(t.latAnim.value),r=parseFloat(t.tzAnim.value),o={tz:60*-r},s=Math.abs(r)+.5/60;o.tzString=r>=0?"+":"-";var l=Math.floor(s).toString();l.length<2&&(l="0"+l);var d=Math.floor(60*(s-Math.floor(s))).toString();d.length<2&&(d="0"+d),o.tzString+=l+d;var c=parseInt(t.yearAnim.value),p=parseInt(t.monthAnim.value),h=parseInt(t.dayAnim.value),m=parseInt(t.hourAnim.value),u=parseInt(t.minuteAnim.value),g=parseFloat(t.secondAnim.value),v=parseFloat(t.timeStepAnim.value),b=parseInt(t.frameRateAnim.value),y="#animationErrorlocs";$(y).empty();var S=-180,f=180,M="Invalid longitude! Longitude must be a number between -180 and 180. West of Greenwich is negative; east of Greenwich is positive.";if(sanityCheck(i,"#longAnim",S,f,M,y),S=-90,f=90,M="Invalid latitude! Latitude must be a number between -90 and 90, positive in the northern hemisphere and negative in the southern hemisphere.",sanityCheck(n,"#latAnim",S,f,M,y),M="Invalid year! Please enter an integer between "+(S=-2e5)+" and "+(f=2e5)+". Note that 0 means 1 BCE, -1 means 2 BCE and so on. Note that the positions of the Sun, Moon and planets are only accurate for years between -3000 and 3000.",sanityCheck(c,"#yearAnim",S,f,M,y),S=1,f=12,M="Invalid month! Month must be an integer between 1 and 12.",sanityCheck(p,"#monthAnim",S,f,M,y),S=1,f=31,M="Invalid day! Day must be an integer between 1 and 31.",sanityCheck(h,"#dayAnim",S,f,M,y),S=0,f=23,M="Invalid hour! Hour must be an integer between 0 and 23.",sanityCheck(m,"#hourAnim",S,f,M,y),S=0,f=59,M="Invalid minute! Minute must be an integer between 0 and 59.",sanityCheck(u,"#minuteAnim",S,f,M,y),S=0,f=60,M="Invalid second! Second must be a number between 0 and 60.",sanityCheck(g,"#secondAnim",S,f,M,y),S=-12,f=14,M="Invalid time zone! Time zone must be a number between -12 and 14.",sanityCheck(r,"#tzAnim",S,f,M,y),M="Invalid time step/frame! Please enter a number between "+(S=-52596e3)+" and "+(f=52596e3)+".",sanityCheck(v,"#timeStepAnim",S,f,M,y),M="Invalid time between 2 frames! Please enter an integer between "+(S=1)+" and "+(f=1e3)+".",sanityCheck(b,"#frameRateAnim",S,f,M,y),""==$(y).text()){var T,z="#animationSetup"+e;$(z).slideUp(),$(z).empty(),$("button.menu").attr("disabled",!1),$("button.setupAnimate").attr("disabled",!1),$("button.controlAnimate").attr("disabled",!1),1==e?(place1=a,long1=i,lat1=n,T=date1,tz1={tz:o.tz,tzString:o.tzString}):(place2=a,long2=i,lat2=n,T=date2,tz2={tz:o.tz,tzString:o.tzString});var x=getDm(c,p,h,0),w=CalDat(x);T.yyyy=w.yy,T.mm=w.mm,T.dd=w.dd,T.h=m,T.m=u,T.s=g,T.tz=o.tz,T.tzString=o.tzString,T.dateString=w.dateString,T.timeString=generateTimeString(m,u,g),T.D=getDm(T.yyyy,T.mm,T.dd,o.tz)+(m+u/60+g/3600)/24,T.T=T.D/36525,T.dT=DeltaT(T.T);var A=getSidereal(getGMST(T),i);T.LST=A.hour,T.LST_rad=A.rad,T.LSTstring=A.string,animateDtStep=v,frameRate=b,starChart()}}var csvdata="";function riseSetPage(){$("#starCharts").hide(),$("#riseSetArea").show();var t=Math.PI/180;$("#riseSetPlace1").text(place1),$("#riseSetlong1").html(long1+"&deg;"),$("#riseSetlat1").html(lat1+"&deg;"),$("#riseSetDate1").html(date1.dateString),$("#riseSetTtimeZone1").html("GMT"+tz1.tzString),riseSetLoc({locNum:1,long:long1*t,lat:lat1*t,tz:tz1.tz,yyyy:date1.yyyy,mm:date1.mm,dd:date1.dd}),$("#riseSetPlace2").text(place2),$("#riseSetlong2").html(long2+"&deg;"),$("#riseSetlat2").html(lat2+"&deg;"),$("#riseSetDate2").html(date2.dateString),$("#riseSetTtimeZone2").html("GMT"+tz2.tzString),riseSetLoc({locNum:2,long:long2*t,lat:lat2*t,tz:tz2.tz,yyyy:date2.yyyy,mm:date2.mm,dd:date2.dd})}function backToStarCharts(){$("#RSMultiResult").empty(),$("#riseSetMultipleDays").slideUp(),$("#riseSetMainPage").slideDown(),$("#starCharts").show(),$("#riseSetArea").hide()}function riseSetChangeLocs(){$("button.menu").attr("disabled",!0),$("#RSMultiResult").empty(),$("#riseSetMultipleDays").slideUp(),$("#riseSetMainPage").slideDown();var t=$("#riseSetPlace1").text(),e=$("#riseSetPlace2").text(),a=$("#riseSetlong1").html(),i=a.indexOf("&deg;"),n=parseFloat(a.slice(0,i)),r=$("#riseSetlong2").html();i=r.indexOf("&deg;");var o=parseFloat(r.slice(0,i)),s=$("#riseSetlat1").html();i=s.indexOf("&deg;");var l=parseFloat(s.slice(0,i)),d=$("#riseSetlat2").html();i=d.indexOf("&deg;");var c=parseFloat(d.slice(0,i)),p=$("#riseSetDate1").text(),h=$("#riseSetDate2").text();i=p.indexOf("-");var m=parseInt(p.slice(0,i)),u=parseInt(p.substr(i+1,2)),g=parseInt(p.substr(i+4,2));i=h.indexOf("-");var v=parseInt(h.slice(0,i)),b=parseInt(h.substr(i+1,2)),y=parseInt(h.substr(i+4,2)),S=$("#riseSetTtimeZone1").text(),f=$("#riseSetTtimeZone2").text(),M=S.substr(3,1),T=f.substr(3,1),z=parseFloat(S.substr(4,2))+parseFloat(S.substr(6,2))/60;"-"==M&&(z=-z);var x=parseFloat(f.substr(4,2))+parseFloat(f.substr(6,2))/60;"-"==T&&(x=-x),$("#riseSetInputlocs").slideDown(),$("#riseSetPlace1in").val(t),$("#riseSetLong1in").val(n),$("#riseSetLat1in").val(l),$("#riseSetYear1in").val(m),$("#riseSetMonth1in").val(u),$("#riseSetDay1in").val(g),$("#riseSetTz1in").val(z),$("#riseSetPlace2in").val(e),$("#riseSetLong2in").val(o),$("#riseSetLat2in").val(c),$("#riseSetYear2in").val(v),$("#riseSetMonth2in").val(b),$("#riseSetDay2in").val(y),$("#riseSetTz2in").val(x),$("#riseSetSynTimeYes").prop("checked",!0),$("#riseSetSynTimeNo").prop("checked",!1),$(".timeInputLoc2").hide()}function riseSetChangeLocationsAndDates(t){var e=t.riseSetPlace1in.value,a=parseFloat(t.riseSetLong1in.value),i=parseFloat(t.riseSetLat1in.value),n=parseFloat(t.riseSetTz1in.value),r={tz:60*-n},o=Math.abs(n)+.5/60;r.tzString=n>=0?"+":"-";var s=Math.floor(o).toString();s.length<2&&(s="0"+s);var l=Math.floor(60*(o-Math.floor(o))).toString();l.length<2&&(l="0"+l),r.tzString+=s+l;var d=parseInt(t.riseSetYear1in.value),c=parseInt(t.riseSetMonth1in.value),p=parseInt(t.riseSetDay1in.value),h=t.riseSetPlace2in.value,m=parseFloat(t.riseSetLong2in.value),u=parseFloat(t.riseSetLat2in.value),g=parseFloat(t.riseSetTz2in.value),v={tz:60*-g};o=Math.abs(g)+.5/60,v.tzString=g>=0?"+":"-",(s=Math.floor(o).toString()).length<2&&(s="0"+s),(l=Math.floor(60*(o-Math.floor(o))).toString()).length<2&&(l="0"+l),v.tzString+=s+l;var b,y,S,f=document.getElementById("riseSetSynTimeYes").checked;f?(b=d,y=c,S=p):(b=parseInt(t.riseSetYear2in.value),y=parseInt(t.riseSetMonth2in.value),S=parseInt(t.riseSetDay2in.value));var M="#riseSetErrorlocs";$(M).empty();var T=-180,z=180,x="Invalid longitude! Longitude must be a number between -180 and 180. West of Greenwich is negative; east of Greenwich is positive.";if(sanityCheck(a,"#riseSetLong1in",T,z,x,M),sanityCheck(m,"#riseSetLong2in",T,z,x,M),T=-90,z=90,x="Invalid latitude! Latitude must be a number between -90 and 90, positive in the northern hemisphere and negative in the southern hemisphere.",sanityCheck(i,"#riseSetLat1in",T,z,x,M),sanityCheck(u,"#riseSetLat2in",T,z,x,M),T=-3e3,z=3e3,x="Invalid year! Please enter an integer between -3000 and 3000. Note that 0 means 1 BCE, -1 means 2 BCE and so on. This webpage can only handle years between -3000 and 3000.",sanityCheck(d,"#riseSetYear1in",T,z,x,M),f||sanityCheck(b,"#riseSetYear2in",T,z,x,M),T=1,z=12,x="Invalid month! Month must be an integer between 1 and 12.",sanityCheck(c,"#riseSetMonth1in",T,z,x,M),f||sanityCheck(y,"#riseSetMonth2in",T,z,x,M),T=1,z=31,x="Invalid day! Day must be an integer between 1 and 31.",sanityCheck(p,"#riseSetDay1in",T,z,x,M),f||sanityCheck(S,"#riseSetDay2in",T,z,x,M),T=-12,z=14,x="Invalid time zone! Time zone must be a number between -12 and 14.",sanityCheck(n,"#riseSetTz1in",T,z,x,M),sanityCheck(g,"#riseSetTz2in",T,z,x,M),""==$(M).text()){$("#riseSetInputlocs").slideUp(),$("button.menu").attr("disabled",!1);var w=getDm(d,c,p,0),A=CalDat(w);d=A.yy,c=A.mm,p=A.dd;var D=A.dateString;w=getDm(b,y,S,0),b=(A=CalDat(w)).yy,y=A.mm,S=A.dd;var C=A.dateString;$("#riseSetPlace1").text(e),$("#riseSetlong1").html(a+"&deg;"),$("#riseSetlat1").html(i+"&deg;"),$("#riseSetDate1").html(D),$("#riseSetTtimeZone1").html("GMT"+r.tzString);var L=Math.PI/180;riseSetLoc({locNum:1,long:a*L,lat:i*L,tz:r.tz,yyyy:d,mm:c,dd:p}),$("#riseSetPlace2").text(h),$("#riseSetlong2").html(m+"&deg;"),$("#riseSetlat2").html(u+"&deg;"),$("#riseSetDate2").html(C),$("#riseSetTtimeZone2").html("GMT"+v.tzString),riseSetLoc({locNum:2,long:m*L,lat:u*L,tz:v.tz,yyyy:b,mm:y,dd:S})}}function riseSetMultipleDates(){if($("button.menu").attr("disabled",!0),$("#riseSetMainPage").slideUp(10),$("#RSMultiResult").empty(),$("#riseSetMultipleDays").slideDown(10),$("#riseSetMultipleDaysInput").slideDown(10),""==$("#RSMultiLongin").val()){var t=$("#riseSetPlace1").text(),e=$("#riseSetlong1").html(),a=e.indexOf("&deg;"),i=parseFloat(e.slice(0,a)),n=$("#riseSetlat1").html();a=n.indexOf("&deg;");var r=parseFloat(n.slice(0,a)),o=$("#riseSetTtimeZone1").text(),s=o.substr(3,1),l=parseFloat(o.substr(4,2))+parseFloat(o.substr(6,2))/60;"-"==s&&(l=-l),$("#RSMultiPlacein").val(t),$("#RSMultiLongin").val(i),$("#RSMultiLatin").val(r),$("#RSMultiTzin").val(l),$("#RSMultiEpoch").val(2e3),$("#RSMultiDt").val(1)}"Star"==$("#objects").val()&&$(".RSMultiRaDec").show()}function RSMultipleDays(t){var e=t.RSMultiPlacein.value,a=parseFloat(t.RSMultiLongin.value),i=parseFloat(t.RSMultiLatin.value),n=parseFloat(t.RSMultiTzin.value),r=Math.abs(n)+.5/60,o="GMT";o+=n>=0?"+":"-";var s=Math.floor(r).toString();s.length<2&&(s="0"+s);var l=Math.floor(60*(r-Math.floor(r))).toString();l.length<2&&(l="0"+l),o+=s+l;var d,c,p,h=t.objects.value;"Star"==h&&(d=parseFloat(t.RSMultiRa.value),c=parseFloat(t.RSMultiDec.value),p=parseFloat(t.RSMultiEpoch.value));var m=parseInt(t.RSMultiYear1in.value),u=parseInt(t.RSMultiMonth1in.value),g=parseInt(t.RSMultiDay1in.value),v=parseInt(t.RSMultiYear2in.value),b=parseInt(t.RSMultiMonth2in.value),y=parseInt(t.RSMultiDay2in.value),S=parseInt(t.RSMultiDt.value),f="#RSMultiErrorlocs";$(f).empty();var M=["Sun","Moon","Mercury","Venus","Mars","Jupiter","Saturn","Uranus","Neptune","Star"],T=!1;$("#objects").css("background-color","white");for(var z=0;z<M.length;z++)if(h==M[z]){T=!0;break}if(!T){var x='<p style="color:red;">Please select an object.</p>';$("#objects").css("background-color","#e2a8a8"),$(f).append(x)}var w=-180,A=180,D="Invalid longitude! Longitude must be a number between -180 and 180. West of Greenwich is negative; east of Greenwich is positive.";if(sanityCheck(a,"#RSMultiLongin",w,A,D,f),w=-90,A=90,D="Invalid latitude! Latitude must be a number between -90 and 90, positive in the northern hemisphere and negative in the southern hemisphere.",sanityCheck(i,"#RSMultiLatin",w,A,D,f),w=-12,A=14,D="Invalid time zone! Time zone must be a number between -12 and 14.",sanityCheck(n,"#RSMultiTzin",w,A,D,f),"Star"==h&&(w=0,A=24,D="Invalid RA! RA must be a number between 0 and 24.",sanityCheck(d,"#RSMultiRa",w,A,D,f),w=-90,A=90,D="Invalid Dec! Dec must be a number between -90 and 90.",sanityCheck(c,"#RSMultiDec",w,A,D,f),w=-2e5,A=2e5,D="Invalid epoch. Please enter a year bteween -200,000 and 200,000: 2000 means J2000.0, 2050 means 50 years after J2000.0.",sanityCheck(p,"#RSMultiEpoch",w,A,D,f)),w=-3e3,A=3e3,D="Invalid year! Please enter an integer between -3000 and 3000. Note that 0 means 1 BCE, -1 means 2 BCE and so on. This webpage can only handle years between -3000 and 3000.",sanityCheck(m,"#RSMultiYear1in",w,A,D,f),sanityCheck(v,"#RSMultiYear2in",w,A,D,f),w=1,A=12,D="Invalid month! Month must be an integer between 1 and 12.",sanityCheck(u,"#RSMultiMonth1in",w,A,D,f),sanityCheck(b,"#RSMultiMonth2in",w,A,D,f),w=1,A=31,D="Invalid day! Day must be an integer between 1 and 31.",sanityCheck(g,"#RSMultiDay1in",w,A,D,f),sanityCheck(y,"#RSMultiDay2in",w,A,D,f),w=1,A=Number.POSITIVE_INFINITY,D="Invalid time step! Time step must be a positive integer.",sanityCheck(S,"#RSMultiDt",w,A,D,f),""==$(f).text()){$("#riseSetMultipleDaysInput").slideUp(),$("button.menu").attr("disabled",!1);x="<p>Location: "+e+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Longitude: "+a.toString()+"&deg;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Latitude: "+i.toString()+"&deg;";$("#RSMultiResult").append(x),x="<p>Time zone: "+o+"</p>",$("#RSMultiResult").append(x),x="Star"==h?"<p>Object: a star with RA = "+d+"<sup>h</sup>, &nbsp;&nbsp; Dec = "+c+"&deg;, &nbsp;&nbsp; epoch:"+p+"</p>":"<p>Object: "+h+"</p>",$("#RSMultiResult").append(x),calcRiseSetMultipleDates({long:a,lat:i,tz:n,D1:getDm(m,u,g,0),D2:getDm(v,b,y,0),deltaD:S,obj:h,ra:d,dec:c,epoch:p})}}function riseSetShowHideRADec(t){var e="."+t;"Star"==$("#objects").val()?$(e).show():$(e).hide()}function getLST0(t,e,a,i){var n=i/60;n<0&&(n+=24);var r=.06570748587250752*(Math.floor(t-.5)+.5);r-=24*Math.floor(r/24),r+=6.697374558336001+1.0027378119113546*n,r-=24*Math.floor(r/24);var o=(r+=2.686296296296296e-7+e*(.08541030618518518+2577003148148148e-20*e))+12*a/Math.PI;return(o-=24*Math.floor(o/24))*Math.PI/12}function riseSetLoc(t){t.locNum.toString();var e=getDm(t.yyyy,t.mm,t.dd,t.tz),a=e/36525,i=getLST0(e,a+DeltaT(a),t.long,t.tz);riseSetPlanetsTwilights(i,t.locNum,t.lat,a),riseSetBrightestStars(i,t.locNum,t.lat,a+DeltaT(a))}function riseSetPlanetsTwilights(t,e,a,i){var n,r=DeltaT(i),o=(Math.sin(a),Math.cos(a),[]);for(n=0;n<25;n++)o[n]=sunMoonPlanets(i+n/876600+r);var s,l,d,c,p=[],h=[];for(s="#riseSetSun"+e.toString(),$(s).empty(),n=0;n<25;n++)p[n]=o[n][0].ra,h[n]=o[n][0].dec;for(d=getTransitTime(t,a,p,h,!1),"above"==(l=getRiseSet(-.01454441043328608,t,a,p,h)).rise?(c="<p>Upper transit: "+d.t+" (Altitude = "+d.alt+"); ",c+="the sun is above the horizon all day."):"below"==l.rise?(c="<p>Upper transit: "+d.t+" (Altitude = "+d.alt+"); ",c+="the sun is below the horizon all day."):(c="<p>Sunrise: "+l.rise+" (Azimuth = "+l.azRise+")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",c+="Sunset: "+l.set+" (Azimuth = "+l.azSet+")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",c+="Upper transit: "+d.t+" (Altitude = "+d.alt+")</p>"),$(s).append(c),c="above"==(l=getRiseSet(-.1047197551196598,t,a,p,h)).rise?"<p>No civil twilights. The Sun's altitude is above -6&deg; all day.</p>":"below"==l.rise?"<p>No civil twilights. The Sun's altitude is below -6&deg; all day.</p>":"<p>Civil twilight: begins at "+l.rise+", ends at "+l.set+".</p>",$(s).append(c),c="above"==(l=getRiseSet(-.2094395102393196,t,a,p,h)).rise?"<p>No nautical twilights. The Sun's altitude is above -12&deg; all day.</p>":"below"==l.rise?"<p>No nautical twilights. The Sun's altitude is below -12&deg; all day.</p>":"<p>Nautical twilight: begins at "+l.rise+", ends at "+l.set+".</p>",$(s).append(c),c="above"==(l=getRiseSet(-.3141592653589793,t,a,p,h)).rise?"<p>No astronomical twilights. The Sun's altitude is above -18&deg; all day.</p>":"below"==l.rise?"<p>No astronomical twilights. The Sun's altitude is below -18&deg; all day.</p>":"<p>Astronomical twilight: begins at "+l.rise+", ends at "+l.set+".</p>",$(s).append(c),s="#riseSetMoon"+e.toString(),$(s).empty(),n=0;n<25;n++)p[n]=o[n][1].ra,h[n]=o[n][1].dec;d=getTransitTime(t,a,p,h,!0),"above"==(l=getRiseSet(.002327105669325773,t,a,p,h)).rise?(c="<p>Upper transit: "+d.t+" (Altitude = "+d.alt+"); ",c+="the Moon is above the horizon all day."):"below"==l.rise?(c="<p>Upper transit: "+d.t+" (Altitude = "+d.alt+"); ",c+="the Moon is below the horizon all day."):(c="<p>Moonrise: "+l.rise+" (Azimuth = "+l.azRise+")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",c+="Moonset: "+l.set+" (Azimuth = "+l.azSet+")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",c+="Upper transit: "+d.t+" (Altitude = "+d.alt+")</p>"),$(s).append(c);var m=o[12][0].ra,u=o[12][0].dec,g=o[12][1].ra,v=o[12][1].dec,b=o[12][1].rGeo,y=o[12][0].lam2000,S=o[12][0].rGeo,f=o[12][1].lam2000,M=moonIlluminated(m,u,g,v,y,f,b,S),T=M.illuminated,z=M.phase,x=M.mag.toFixed(1);c="<p>At 12:00 in the given time zone...<br />",c+="Fraction of Moon illuminated: "+T.toFixed(2)+",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Phase: "+z+",<br />",c+="Apparent Magnitude: "+x+",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Solar elongation: "+M.elongTxt+".</p>",$(s).append(c);var w=["Mercury","Venus","Mars","Jupiter","Saturn","Uranus","Neptune"];s="#riseSetPlanets"+e.toString(),$(s).empty(),c="<p>The elongation is the angular distance between the planet and the Sun. Elongations, fractions illuminated and magnitudes of the planets are given at 12:00 in the given time zone.</p>",$(s).append(c),$(s).append("<table>"),c="<tr><th>Planet</th> <th>Rise (Azimuth)</th> <th>Transit (Alt)</th> ",c+="<th>Set (Azimuth)</th> <th>Elong.</th> <th>Illum.</th> <th>Mag.</th> </tr>",$(s).append(c);for(var A=2;A<9;A++){for(n=0;n<25;n++)p[n]=o[n][A].ra,h[n]=o[n][A].dec;d=getTransitTime(t,a,p,h,!1);var D=(l=getRiseSet(-.009890199094634533,t,a,p,h)).rise+" ("+l.azRise+")",C=l.set+" ("+l.azSet+")";"above"==l.rise?(D="circumpolar",C="circumpolar"):"below"==l.rise&&(D="invisible",C="invisible");var L=o[12][A],I=o[12][0],P=elongationPhase(L,I),R=P.elongation,_=(T=P.illuminated,{object:w[A-2],i:P.phaseAng,rHelio:L.rHelio,rGeo:L.rGeo,T:i+.5/36525+r,planet:L,sun:I});x=planetMag(_);c="<tr><td>"+w[A-2]+"</td>",c+=" <td>"+D+"</td>",c+=" <td>"+d.t+" ("+d.alt+")</td>",c+=" <td>"+C+"</td>",c+=" <td>"+R+"</td>",c+=" <td>"+T+"</td>",c+=" <td>"+x.toFixed(1)+"</td> </tr>",$(s).append(c)}$(s).append("</table>")}function riseSetBrightestStars(t,e,a,i){var n=brightestStarsLoc[e-1],r=n[0].Tepoch;Math.abs(i-r)>.1&&recomputeStarPos(i,n);var o="#riseSetStars"+e.toString();$(o).empty(),$(o).append("<table>");var s="<tr><th>Star</th> <th>Rise (Azimuth)</th> <th>Transit</th> ";s+="<th>Set</th> </tr>",$(o).append(s);for(var l=1;l<n.length;l++){var d=riseSetStar(t,-.009890199094634533,a,n[l].ra,n[l].dec),c=d.rise+" ("+d.azRise+")",p=d.transit+" ("+d.altTransit+")";"above"==d.rise?(c="circumpolar",d.set="circumpolar"):"below"==d.rise&&(c="invisible",d.set="invisible"),s="<tr><td>"+n[l].name+"</td>",s+=" <td>"+c+"</td>",s+=" <td>"+p+"</td>",s+=" <td>"+d.set+"</td> </tr>",$(o).append(s)}$(o).append("</table>"),s="<p>Note: For stars, the azimuth at the set time is the negative of its azimuth when it rises.</p>",$(o).append(s)}function calcRiseSetMultipleDates(t){var e,a,i,n,r,o,s,l,d,c,p,h=Math.PI/180,m=t.long*h,u=t.lat*h,g=(t.D1-t.tz/24)/36525,v=t.deltaD/36525,b=0,y=1e4,S=500,f="#RSMultiResult",M=[],T=[],z=[!1,!1,!1,!1,!1,!1,!1,!1];switch(c="<p>Note: The table shows data up to 500 dates. The csv file contains data up to 10000 dates.</p>",$(f).append(c),c="<p>Times are given according to the time zone listed above. Daylight saving time is not taken into account.</p>",$(f).append(c),t.obj){case"Sun":for(c="<p>The Gregorian calendar is approximately in sync with the Sun's motion, so the times are approximately the same at the same date every year. It is therefore not necessary to calculate the times for more than a year.</p>",$(f).append(c),c="<p>In the table below, the angles beside the rise and set times are the azimuths of the Sun at the rise and set times. Azimuth is measured from north and turning positive towards the east. The angle and direction beside the upper transit time is the altitute and direction of the Sun's center at transit. Atmospheric refraction is added when the altitude is above -1&deg;. For the twilights, the first time is the beginning of the twilight and the second time is the end of the twilight.</p>",$(f).append(c),c="<p><button onclick=\"download_csv(csvdata,'Sun.csv')\">Download csv file</button></p>",$(f).append(c),$(f).append("<table>"),c="<tr><th>Date</th> <th>Rise</th> <th>Transit</th> <th>Set</th>",c+="<th>Civ. Twi.</th> <th>Nat. Twi.</th>",c+="<th>Ast. Twi.</th> </tr>",$(f).append(c),csvdata="Date, Rise, Transit, Set, Civ. Twi. beg., Civ. Twi. end, Nat. Twi. beg., Nat. Twi. end, Ast. Twi. beg., Ast. Twi. end\n",z[2]=!0,e=t.D1;e<=t.D2;e+=t.deltaD){for(p=CalDat(e).dateString,a=g+b*v,i=DeltaT(a),n=getLST0(e-t.tz/24,a+i,m,60*-t.tz),c="<tr> <td>"+p+"</td>",csvdata+=p+", ",r=0;r<25;r++)o=planetPos(a+r/876600+i,z),M[r]=o[2].ra,T[r]=o[2].dec;if(d=getTransitTime(n,u,M,T,!1),"above"==(l=getRiseSet(s=-.01454441043328608,n,u,M,T)).rise?(c+="<td>circumpolar</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+="circumpolar</td> ",csvdata+="circumpolar, "+d.t+" ("+d.alt+"), ",csvdata+="circumpolar, "):"below"==l.rise?(c+="<td>invisible</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+="invisible</td> ",csvdata+="invisible, "+d.t+" ("+d.alt+"), ",csvdata+="invisible, "):(c+="<td>"+l.rise+" ("+l.azRise+")</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+=l.set+" ("+l.azSet+")</td> ",csvdata+=l.rise+" ("+l.azRise+"), ",csvdata+=d.t+" ("+d.alt+"), ",csvdata+=l.set+" ("+l.azSet+"), "),"above"==(l=getRiseSet(s=-.1047197551196598,n,u,M,T)).rise?(c+="<td>above -6&deg;</td> ",csvdata+="above -6 degrees, above -6 degrees, "):"below"==l.rise?(c+="<td>below -6&deg;</td> ",csvdata+="below -6 degrees, below -6 degrees, "):(c+="<td>"+l.rise+", "+l.set+"</td> ",csvdata+=l.rise+", "+l.set+", "),"above"==(l=getRiseSet(s=-.2094395102393196,n,u,M,T)).rise?(c+="<td>above -12&deg;</td> ",csvdata+="above -12 degrees, above -12 degrees, "):"below"==l.rise?(c+="<td>below -12&deg;</td> ",csvdata+="below -12 degrees, below -12 degrees, "):(c+="<td>"+l.rise+", "+l.set+"</td> ",csvdata+=l.rise+", "+l.set+", "),"above"==(l=getRiseSet(s=-.3141592653589793,n,u,M,T)).rise?(c+="<td>above -18&deg;</td>",csvdata+="above -18 degrees, above -18 degrees\n"):"below"==l.rise?(c+="<td>below -18&deg;</td>",csvdata+="below -18 degrees, below -18 degrees\n"):(c+="<td>"+l.rise+", "+l.set+"</td>",csvdata+=l.rise+", "+l.set+"\n"),c+=" </tr>",++b<=S&&$(f).append(c),b==y)break}$(f).append("</table>");break;case"Moon":for(c="<p>In the table below, the angles beside the rise and set times are the azimuths of the Moon at the rise and set times. Azimuth is measured from north and turning positive towards the east. The angle and direction beside the upper transit time is the altitute and direction of the Moon's center at transit. Atmospheric refraction is added when the altitude is above -1&deg;. Illumination gives the fraction of the Moon illuminated. Elongation is the angular distance between the Moon and the Sun. Illumination, apparent magnitude and elongation are the values at 12:00 in the given time zone.</p>",$(f).append(c),c="<p><button onclick=\"download_csv(csvdata,'Moon.csv')\">Download csv file</button></p>",$(f).append(c),$(f).append("<table>"),c="<tr><th>Date</th> <th>Rise</th> <th>Transit</th> <th>Set</th> <th>Illum.</th> <th>Mag.</th> <th>Elong.</th> <th>Phase</th> </tr>",$(f).append(c),csvdata="Date, Rise, Transit, Set, Illuminated, Magnitude, Elongation, Phase\n",s=.002327105669325773,e=t.D1;e<=t.D2;e+=t.deltaD){var x,w;for(p=CalDat(e).dateString,a=g+b*v,i=DeltaT(a),n=getLST0(e-t.tz/24,a+i,m,60*-t.tz),c="<tr> <td>"+p+"</td>",csvdata+=p+", ",r=0;r<25;r++){var A=MediumMoon(a+i+r/24/36525);M[r]=A.ra,T[r]=A.dec,12==r&&(x=A.lam2000,w=A.rGeo)}d=getTransitTime(n,u,M,T,!0),"above"==(l=getRiseSet(s,n,u,M,T)).rise?(c+="<td>circumpolar</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+="circumpolar</td> ",csvdata+="circumpolar, "+d.t+" ("+d.alt+"), ",csvdata+="circumpolar, "):"below"==l.rise?(c+="<td>invisible</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+="invisible</td> ",csvdata+="invisible, "+d.t+" ("+d.alt+"), ",csvdata+="invisible, "):(c+="<td>"+l.rise+" ("+l.azRise+")</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+=l.set+" ("+l.azSet+")</td> ",csvdata+=l.rise+" ("+l.azRise+"), ",csvdata+=d.t+" ("+d.alt+"), ",csvdata+=l.set+" ("+l.azSet+"), "),z[2]=!0;(_=planetPos(a+i+.5/36525,z)[2]).ra,_.dec;var D=_.rGeo,C=(M[12],T[12],moonIlluminated(_.ra,_.dec,M[12],T[12],_.lam2000,x,w,D)),L=C.illuminated.toFixed(2),I=C.phase,P=C.mag.toFixed(1);if(c+="<td>"+L+"</td>",csvdata+=L+", ",c+="<td>"+P+"</td>",csvdata+=P+", ",c+="<td>"+C.elongTxt+"</td>",csvdata+=C.elongTxt+", ",c+="<td>"+I+"</td> </tr>",csvdata+=I+"\n",++b<=S&&$(f).append(c),b==y)break}$(f).append("</table>");break;case"Mercury":case"Venus":case"Mars":case"Jupiter":case"Saturn":case"Uranus":case"Neptune":var R={Mercury:0,Venus:1,Mars:3,Jupiter:4,Saturn:5,Uranus:6,Neptune:7}[t.obj];for(z[2]=!0,z[R]=!0,c="<p>In the table below, the angles beside the rise and set times are the azimuths of "+t.obj,c+=" at the rise and set times. Azimuth is measured from north and turning positive towards the east. The angle and direction beside the upper transit time is the altitute and direction of "+t.obj,c+=" at transit. Atmospheric refraction is added when the altitude is above -1&deg;. Elongation is the angular distance between "+t.obj+" and the Sun. Elongation and magnitude are given at 12:00 in the given time zone.</p>",$(f).append(c),c="<p><button onclick=\"download_csv(csvdata,'"+t.obj+".csv')\">Download csv file</button></p>",$(f).append(c),$(f).append("<table>"),c="<tr><th>Date</th> <th>Rise (Azi)</th> <th>Transit (Alt)</th> <th>Set (Azi)</th> <th>Elong.</th> <th>Illum.</th> <th>Mag.</th></tr>",$(f).append(c),csvdata="Date, Rise (Azimuth), Transit (Altitude), Set (Azimuth), Elongation, Illuminated, Magnitude\n",s=-.009890199094634533,e=t.D1;e<=t.D2;e+=t.deltaD){var _,k;for(p=CalDat(e).dateString,a=g+b*v,i=DeltaT(a),n=getLST0(e-t.tz/24,a+i,m,60*-t.tz),c="<tr> <td>"+p+"</td> ",csvdata+=p+", ",r=0;r<25;r++)o=planetPos(a+r/876600+i,z),M[r]=o[R].ra,T[r]=o[R].dec,12==r&&(_=o[2],k=o[R]);d=getTransitTime(n,u,M,T,!1);var F=(l=getRiseSet(s,n,u,M,T)).rise+" ("+l.azRise+")",E=l.set+" ("+l.azSet+")";"above"==l.rise?(F="circumpolar",E="circumpolar"):"below"==l.rise&&(F="invisible",E="invisible");var N=elongationPhase(k,_),G=N.elongation,U=(L=N.illuminated,{object:t.obj,i:N.phaseAng,rHelio:k.rHelio,rGeo:k.rGeo,T:a+.5/36525+i,planet:k,sun:_});P=planetMag(U).toFixed(1);if(c+="<td>"+F+"</td> <td>",c+=d.t+" ("+d.alt+")</td> <td>",c+=E+"</td> <td>"+G+"</td> <td>"+L+"</td> <td>",c+=P+"</td> </tr>",csvdata+=F+", "+d.t+" ("+d.alt+"), ",csvdata+=E+", "+G+", "+L+", "+P+"\n",++b<=S&&$(f).append(c),b==y)break}break;case"Star":c="<p>Note that the rise, set and upper transit times of a star are 3 minutes and 56 seconds earlier than those in the previous day. The only long-term changes are caused by precession and the star's proper motion, which occurs on a very long time scale.</p>",$(f).append(c),c="<p>In the table below, the angles beside the rise time is the azimuth of the star at the rise time. Azimuth is measured from north and turning positive towards the east. For stars, the azimuth at the set time is always equal to the negative of the azimuth at the rise time and the azimuth is the same every day. The angle and direction beside the upper transit time is the altitute and direction of the star at transit, which is also the same every day. Atmospheric refraction is added when the altitude is above -1&deg;.</p>",$(f).append(c);var j=t.ra*Math.PI/12,q=t.dec*h,H=.01*(t.epoch-2e3);for(c="<p><button onclick=\"download_csv(csvdata,'star.csv')\">Download csv file</button></p>",$(f).append(c),$(f).append("<table>"),c="<tr><th>Date</th> <th>Rise</th> <th>Transit</th> <th>Set</th> </tr>",$(f).append(c),csvdata="Date, Rise, Transit, Set\n",s=-.009890199094634533,e=t.D1;e<=t.D2;e+=t.deltaD){if(p=CalDat(e).dateString,a=g+b*v,i=DeltaT(a),n=getLST0(e-t.tz/24,a+i,m,60*-t.tz),c="<tr> <td>"+p+"</td> ",csvdata+=p+", ",Math.abs(a-H)>.1){var O=precession_matrix(H,a-H),W=precessed_ra_dec(j,q,O);j=W.ra,q=W.dec,H=a}var B=riseSetStar(n,s,u,j,q);F=B.rise+" ("+B.azRise+")",E=B.set;if("above"==B.rise?(F="circumpolar",E="circumpolar"):"below"==B.rise&&(F="invisible",E="invisible"),c+="<td>"+F+"</td> <td>",c+=B.transit+" ("+B.altTransit+")</td> <td>",c+=E+"</td></tr>",csvdata+=F+", "+B.transit+" ("+B.altTransit+"), ",csvdata+=E+"\n",++b<=S&&$(f).append(c),b==y)break}}}function Quad(t,e,a,i){return((.5*(i+e)-a)*t+.5*(i-e))*t+a}function QuadRootSearch(t,e,a){var i,n,r,o,s,l=.5*(a+t)-e,d=.5*(a-t),c=e;if(Math.abs(l)<1e-6)return i=d>0?1:-1,0==d?(i=0,r=1/0,s=0):(r=-c/d,s=1,Math.abs(r)>1&&(s=0)),{xe:i,ye:n=d*i+c,nroot:s,root1:r,root2:r};n=(l*(i=-.5*d/l)+d)*i+c;var p=d*d-4*l*c;if(p>=0){if(Math.abs(l*c)>.001*p){var h=.5*Math.sqrt(p)/Math.abs(l);r=i-h,o=i+h}else{var m=d+Math.sqrt(p);d<0&&(m=d-Math.sqrt(p));var u=-2*c/m,g=-.5*m/l;r=Math.min(u,g),o=Math.max(u,g)}s=0,Math.abs(r)<=1&&s++,Math.abs(o)<=1&&s++,1==s&&(r=Math.abs(r)<=1?r:o)}else s=0,r=1/0,o=1/0;return{xe:i,ye:n,nroot:s,root1:r,root2:o}}function getTransitTime(t,e,a,i,n){var r,o,s=2*Math.PI,l=[];for(r=0;r<25;r++)l[r]=t-a[r]+.262516170790829*r,l[r]-=s*Math.floor((l[r]+Math.PI)/s);for(r=0;r<24;r++)if(l[r]*l[r+1]<0&&Math.abs(l[r]-l[r+1])<1){o=r;break}if(void 0===o)return{t:"-",alt:"-"};0==o&&(o=1);var d=QuadRootSearch(l[o-1],l[o],l[o+1]);if(1!=d.nroot)return{t:"NA",alt:"NA"};var c=convertHoursToHourMinute(o+d.root1),p=Quad(d.root1,i[o-1],i[o],i[o+1]),h=.5*Math.PI-Math.abs(e-p);if(n){h-=6371*Math.cos(h)/(384400-6371*Math.sin(h))}return h>-.0175&&(h+=atmosphericRefraction(h,101,286)),h=(h*=180/Math.PI).toFixed(1)+"&deg;",{t:c,alt:h+=e<p?" N":" S"}}function getRiseSet(t,e,a,i,n){var r,o,s=Math.cos(a),l=Math.sin(a),d=Math.sin(t),c=[];for(r=0;r<25;r++)o=e-i[r]+.262516170790829*r,c[r]=l*Math.sin(n[r])+s*Math.cos(n[r])*Math.cos(o)-d;var p,h,m,u,g=!1,v=!1;for(r=1;r<25;r+=2){var b=QuadRootSearch(c[r-1],c[r],c[r+1]);if(b.nroot>0&&(1==b.nroot?c[r-1]<0?(p=r,g=!0,m=r+b.root1):(h=r,v=!0,u=r+b.root1):(p=r,h=r,g=!0,v=!0,b.ye>=0?(m=r+b.root1,u=r+b.root2):(u=r+b.root1,m=r+b.root2))),g&&v)break}var y=function(t,a){var r,d,c,p,h,m,u,g,v,b;h=Math.sin(i[t]),m=Math.sin(i[t+1]),g=Quad(a,Math.sin(i[t-1]),h,m),h=Math.cos(i[t]),m=Math.cos(i[t+1]),u=Quad(a,Math.cos(i[t-1]),h,m),v=Math.atan2(g,u),b=Quad(a,n[t-1],n[t],n[t+1]),o=e-v+.262516170790829*(t+a),r=Math.cos(b),d=Math.sin(b),c=r*Math.sin(o),p=r*Math.cos(o)*l-d*s;var y=180+180/Math.PI*Math.atan2(c,p);return y>180&&(y-=360),Math.round(y).toString()+"&deg;"},S="-",f="-",M="-",T="-";return g&&(M=convertHoursToHourMinute(m),S=y(p,m-p)),v&&(T=convertHoursToHourMinute(u),f=y(h,u-h)),g||v||(c[0]>0?(M="above",T="above"):(M="below",T="below")),{rise:M,set:T,azRise:S,azSet:f}}function convertHoursToHourMinute(t){var e=t+.5/60,a=Math.floor(e),i=Math.floor(60*(e-a)).toString();return(a=a.toString()).length<2&&(a="0"+a),i.length<2&&(i="0"+i),a+":"+i}function riseSetStar(t,e,a,i,n){var r=.5*Math.PI,o=180/Math.PI,s=r-Math.abs(a-n),l=-r+Math.abs(a+n),d=12*(i-t)/Math.PI,c=(d-=24*Math.floor(d/24))/1.0027378119113546,p=convertHoursToHourMinute(c),h="";a<n?h="N":a>n&&(h="S");var m,u,g,v=s;if(v>-.0175&&(v+=atmosphericRefraction(s,101,286)),v=(v*=o).toFixed(1)+"&deg; "+h,e<l)m="above",u="above",g="-";else if(e>s)m="below",u="below",g="-";else{Math.sin(i),Math.cos(i);var b=Math.sin(n),y=Math.cos(n),S=Math.sin(a),f=Math.cos(a),M=Math.acos((Math.sin(e)-S*b)/(f*y)),T=M+i;c=12*(T-t)/Math.PI,u=convertHoursToHourMinute((c-=24*Math.floor(c/24))/1.0027378119113546),c=12*((T=i-M)-t)/Math.PI,m=convertHoursToHourMinute((c-=24*Math.floor(c/24))/1.0027378119113546),g=Math.atan2(-Math.sin(M)*y,y*Math.cos(M)*S-b*f),g=Math.round(g*o+180).toString()+"&deg;"}return{rise:m,set:u,azRise:g,transit:p,altTransit:v}}function download_csv(t,e){var a=window.document.createElement("a");a.href=window.URL.createObjectURL(new Blob([t],{type:"text/csv"})),a.download=e,document.body.appendChild(a),a.click(),document.body.removeChild(a)}